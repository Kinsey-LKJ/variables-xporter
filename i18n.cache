{"targetLocale":"en","key":"md-section-0","source":"import { Callout, Tabs } from 'nextra/components'","processed":"import { Callout, Tabs } from 'nextra/components'"}
{"targetLocale":"en","key":"md-section-1","source":"# 排版系统","processed":"# Typography system"}
{"targetLocale":"en","key":"md-section-2","source":"让我们来探索如何组织字体和排版相关的变量，包括 `font-family`（字体系列）、`font-size`（字体大小）、`font-weight`（字重）和 `line-height`（行高）等。","processed":"Let's explore how to organize font and typography-related variables, including `font-family`, `font-size`, `font-weight`, and `line-height`."}
{"targetLocale":"en","key":"md-section-3","source":"## 顶层目录","processed":"## Top-level directory"}
{"targetLocale":"en","key":"md-section-4","source":"为了保持变量结构的清晰和直观，且符合 Tailwind CSS 的配置结构，请按照以下规则命名：","processed":"To keep the variable structure clear and intuitive, and to align with Tailwind CSS configuration structure, please follow these naming rules:"}
{"targetLocale":"en","key":"md-section-5","source":"### Tailwind CSS V4 命名规则","processed":"### Tailwind CSS V4 naming rules"}
{"targetLocale":"en","key":"md-section-6","source":"- `font/{variable}` -> **font-family**\n- `text/{variable}` -> **font-size**\n- `font-weight/{variable}` -> **font-weight**\n- `leading/{variable}` -> **line-height**\n- `tracking/{variable}` -> **letter-spacing**\n\n例如：\n- `text/sm`\n- `font/sans`\n- `font-weight/bold`","processed":"- `font/{variable}` -> **font-family**\n- `text/{variable}` -> **font-size**\n- `font-weight/{variable}` -> **font-weight**\n- `leading/{variable}` -> **line-height**\n- `tracking/{variable}` -> **letter-spacing**\n\nFor example:\n- `text/sm`\n- `font/sans`\n- `font-weight/bold`"}
{"targetLocale":"en","key":"md-section-7","source":"### Tailwind CSS V3 命名规则","processed":"### Tailwind CSS V3 naming rules"}
{"targetLocale":"en","key":"md-section-8","source":"- `font-family/{variable}`\n- `font-size/{variable}` \n- `font-weight/{variable}` \n- `line-height/{variable}` \n- `letter-spacing/{variable}` \n\n例如：\n- `font-weight/normal`\n- `font-weight/medium`\n- `font-weight/bold`\n\n\n<Callout emoji=\"💡\">\n你可以任意选择以上两种命名规则，Variables Xporter 都能兼容，并根据导出的格式自动调整为对应 Tailwind CSS 配置的命名规则，但在以下的文档中，我们默认使用 Tailwind CSS V4 的命名规则。\n</Callout>","processed":"- `font-family/{variable}`\n- `font-size/{variable}` \n- `font-weight/{variable}` \n- `line-height/{variable}` \n- `letter-spacing/{variable}` \n\nFor example:\n- `font-weight/normal`\n- `font-weight/medium`\n- `font-weight/bold`\n\n\n<Callout emoji=\"💡\">\nYou can choose either of the above naming conventions, and Variables Xporter will be compatible with both. It will automatically adjust to the corresponding Tailwind CSS configuration naming rules based on the exported format. However, in the following documentation, we will default to using the Tailwind CSS V4 naming rules.\n</Callout>"}
{"targetLocale":"en","key":"md-section-9","source":"## 合并处理 [#merge-property]","processed":"## Merge processing [#merge-property]"}
{"targetLocale":"en","key":"md-section-10","source":"你还可以选择将相关的属性以 `text/{variable}/{property}` 的格式组合在一起。这种方式特别适合管理具有固定样式组合的文本相关变量。\n\n例如，Tailwind CSS 默认的 [Font Size 工具](https://tailwindcss.com/docs/font-size)由 `sm`、`base`、`lg` 等不同的级别组成，而每一个级别除了包含默认的 `font-size` 属性，还包含 `line-height` 属性，例如：","processed":"You can also choose to combine related properties in the format of `text/{variable}/{property}`. This approach is particularly suitable for managing text-related variables with fixed style combinations.\n\nFor example, Tailwind CSS's default [Font Size utility](https://tailwindcss.com/docs/font-size) consists of different levels such as `sm`, `base`, `lg`, etc. Each level includes not only the default `font-size` property but also the `line-height` property, for example:"}
{"targetLocale":"en","key":"md-section-11","source":"#### `sm`","processed":"#### `sm`"}
{"targetLocale":"en","key":"md-section-12","source":"- `text/sm/DEFAULT`\n- `text/sm/line-height`","processed":"- `text/sm/DEFAULT`\n- `text/sm/line-height`"}
{"targetLocale":"en","key":"md-section-13","source":"#### `base`","processed":"#### `base`"}
{"targetLocale":"en","key":"md-section-14","source":"- `text/base/DEFAULT`\n- `text/base/line-height`","processed":"- `text/base/DEFAULT`\n- `text/base/line-height`"}
{"targetLocale":"en","key":"md-section-15","source":"#### `lg`","processed":"#### `lg`"}
{"targetLocale":"en","key":"md-section-16","source":"- `text/lg/DEFAULT`\n- `text/lg/line-height`\n\n这是创建  `font-size` 的原子化变量的绝佳方式。","processed":"- `text/lg/DEFAULT`\n- `text/lg/line-height`\n\nThis is an excellent way to create atomic variables for `font-size`."}
{"targetLocale":"en","key":"md-section-17","source":"---","processed":"---"}
{"targetLocale":"en","key":"md-section-18","source":"除了以上的原子化变量，还有一个典型的示例，就是将这些字体属性进一步抽象成 `display`、`heading`、`body` 等变量：","processed":"In addition to the above atomic variables, there's a typical example of further abstracting these font properties into variables such as `display`, `heading`, `body`, etc.:"}
{"targetLocale":"en","key":"md-section-19","source":"#### `display`","processed":"#### `display`"}
{"targetLocale":"en","key":"md-section-20","source":"- `text/display/DEFAULT`\n- `text/display/font-weight`\n- `text/display/line-height`\n- `text/display/letter-spacing`","processed":"- `text/display/DEFAULT`\n- `text/display/font-weight`\n- `text/display/line-height`\n- `text/display/letter-spacing`"}
{"targetLocale":"en","key":"md-section-21","source":"#### `heading`","processed":"#### `heading`"}
{"targetLocale":"en","key":"md-section-22","source":"- `text/heading/DEFAULT`\n- `text/heading/font-weight`\n- `text/heading/line-height`\n- `text/heading/letter-spacing`","processed":"- `text/heading/DEFAULT`\n- `text/heading/font-weight`\n- `text/heading/line-height`\n- `text/heading/letter-spacing`"}
{"targetLocale":"en","key":"md-section-23","source":"#### `body`","processed":"#### `body`"}
{"targetLocale":"en","key":"md-section-24","source":"- `text/body/DEFAULT`\n- `text/body/font-weight`\n- `text/body/line-height`\n- `text/body/letter-spacing`\n\n这种组织方式 Variables Xporter 会自动生成以下 Tailwind CSS 配置和对应的 CSS 变量：\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-display: 1.5rem;\n  --text-display--line-height: 2rem;\n  --text-display--letter-spacing: -0.01em;\n  --text-display--font-weight: 500;\n\n  --text-heading: 1.25rem;\n  --text-heading--line-height: 1.75rem;\n  --text-heading--letter-spacing: -0.01em;\n  --text-heading--font-weight: 500;\n\n  --text-body: 1rem;\n  --text-body--line-height: 1.5rem;\n  --text-body--letter-spacing: -0.01em;\n  --text-body--font-weight: 400;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'display': ['var(--font-size-display)', {\n        lineHeight: 'var(--font-size-display-line-height)',\n        letterSpacing: 'var(--font-size-display-letter-spacing)',\n        fontWeight: 'var(--font-size-display-font-weight)',\n      }],\n      'heading': ['var(--font-size-heading)', {\n        lineHeight: 'var(--font-size-heading-line-height)',\n        letterSpacing: 'var(--font-size-heading-letter-spacing)',\n        fontWeight: 'var(--font-size-heading-font-weight)',\n      }],\n      'body': ['var(--font-size-body)', {\n        lineHeight: 'var(--font-size-body-line-height)',\n        letterSpacing: 'var(--font-size-body-letter-spacing)',\n        fontWeight: 'var(--font-size-body-font-weight)',\n      }],\n    }\n  }\n}\n```\n```css\n:root {\n  --font-size-display: 1.5rem;\n  --font-size-display-line-height: 2rem;\n  --font-size-display-letter-spacing: -0.01em;\n  --font-size-display-font-weight: 500;\n\n  --font-size-heading: 1.25rem;\n  --font-size-heading-line-height: 1.75rem;\n  --font-size-heading-letter-spacing: -0.01em;\n  --font-size-heading-font-weight: 500;\n\n  --font-size-body: 1rem;\n  --font-size-body-line-height: 1.5rem;\n  --font-size-body-letter-spacing: -0.01em;\n  --font-size-body-font-weight: 400;\n}\n```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```css\n:root {\n  --text-display: 1.5rem;\n  --text-display-line-height: 2rem;\n  --text-display-letter-spacing: -0.01em;\n  --text-display-font-weight: 500;\n\n  --text-heading: 1.25rem;\n  --text-heading-line-height: 1.75rem;\n  --text-heading-letter-spacing: -0.01em;\n  --text-heading-font-weight: 500;\n\n  --text-body: 1rem;\n  --text-body-line-height: 1.5rem;\n  --text-body-letter-spacing: -0.01em;\n  --text-body-font-weight: 400;\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\n\n<Callout type=\"warning\" emoji=\"⚠️\">\n需要注意的是，合并处理功能仅支持四种样式属性 font-size、font-weight、line-height 和 letter-spacing。另外，只有在存在 font-size 属性时，这个功能才会生效。这是为了与 Tailwind CSS 的 [`fontSize` 配置功能](https://tailwindcss.com/docs/font-size#customizing-your-theme)保持一致。\n</Callout>\n\n{/* ### 原子化变量\n\n为了保持变量的灵活性和可重用性，我们也支持原子化的变量命名方式。当变量名符合 `font/{property}/{value}` 的规则[^1]时，Variables Xporter 会自动将其转换为对应的属性目录，以确保与 Tailwind CSS 的配置结构保持一致。\n\n让我们来看一些实际的例子：\n\n字体大小变量：\n- `font/size/sm` → `font-size/sm` （小号字体）\n- `font/size/base` → `font-size/base` （基础字体）\n- `font/size/lg` → `font-size/lg` （大号字体）\n\n字重变量：\n- `font/weight/normal` → `font-weight/normal` （常规字重）\n- `font/weight/medium` → `font-weight/medium` （中等字重）\n- `font/weight/bold` → `font-weight/bold` （粗体字重）\n\n行高变量：\n- `font/line-height/none` → `line-height/none` （无行高）\n- `font/line-height/tight` → `line-height/tight` （紧凑行高）\n- `font/line-height/relaxed` → `line-height/relaxed` （宽松行高）\n\n字间距变量：\n- `font/letter-spacing/normal` → `letter-spacing/normal` （标准字间距）\n- `font/letter-spacing/tight` → `letter-spacing/tight` （紧凑字间距）\n- `font/letter-spacing/wide` → `letter-spacing/wide` （宽松字间距）\n\n[^1]: `font/size/{value}` 、`font/weight/{value}` 、`font/line-height/{value}` 、`font/letter-spacing/{value}`。 */}","processed":"- `text/body/DEFAULT`\n- `text/body/font-weight`\n- `text/body/line-height`\n- `text/body/letter-spacing`\n\nWith this organization method, Variables Xporter will automatically generate the following Tailwind CSS configuration and corresponding CSS variables:\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-display: 1.5rem;\n  --text-display--line-height: 2rem;\n  --text-display--letter-spacing: -0.01em;\n  --text-display--font-weight: 500;\n\n  --text-heading: 1.25rem;\n  --text-heading--line-height: 1.75rem;\n  --text-heading--letter-spacing: -0.01em;\n  --text-heading--font-weight: 500;\n\n  --text-body: 1rem;\n  --text-body--line-height: 1.5rem;\n  --text-body--letter-spacing: -0.01em;\n  --text-body--font-weight: 400;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'display': ['var(--font-size-display)', {\n        lineHeight: 'var(--font-size-display-line-height)',\n        letterSpacing: 'var(--font-size-display-letter-spacing)',\n        fontWeight: 'var(--font-size-display-font-weight)',\n      }],\n      'heading': ['var(--font-size-heading)', {\n        lineHeight: 'var(--font-size-heading-line-height)',\n        letterSpacing: 'var(--font-size-heading-letter-spacing)',\n        fontWeight: 'var(--font-size-heading-font-weight)',\n      }],\n      'body': ['var(--font-size-body)', {\n        lineHeight: 'var(--font-size-body-line-height)',\n        letterSpacing: 'var(--font-size-body-letter-spacing)',\n        fontWeight: 'var(--font-size-body-font-weight)',\n      }],\n    }\n  }\n}\n```\n```css\n:root {\n  --font-size-display: 1.5rem;\n  --font-size-display-line-height: 2rem;\n  --font-size-display-letter-spacing: -0.01em;\n  --font-size-display-font-weight: 500;\n\n  --font-size-heading: 1.25rem;\n  --font-size-heading-line-height: 1.75rem;\n  --font-size-heading-letter-spacing: -0.01em;\n  --font-size-heading-font-weight: 500;\n\n  --font-size-body: 1rem;\n  --font-size-body-line-height: 1.5rem;\n  --font-size-body-letter-spacing: -0.01em;\n  --font-size-body-font-weight: 400;\n}\n```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```css\n:root {\n  --text-display: 1.5rem;\n  --text-display-line-height: 2rem;\n  --text-display-letter-spacing: -0.01em;\n  --text-display-font-weight: 500;\n\n  --text-heading: 1.25rem;\n  --text-heading-line-height: 1.75rem;\n  --text-heading-letter-spacing: -0.01em;\n  --text-heading-font-weight: 500;\n\n  --text-body: 1rem;\n  --text-body-line-height: 1.5rem;\n  --text-body-letter-spacing: -0.01em;\n  --text-body-font-weight: 400;\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\n\n<Callout type=\"warning\" emoji=\"⚠️\">\nIt's important to note that the merge processing feature only supports four style properties: font-size, font-weight, line-height, and letter-spacing. Additionally, this feature will only take effect when the font-size property is present. This is to maintain consistency with Tailwind CSS's [`fontSize` configuration feature](https://tailwindcss.com/docs/font-size#customizing-your-theme).\n</Callout>"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout,Cards } from 'nextra/components'\nimport {RefreshCw } from 'lucide-react'","processed":"import { Callout,Cards } from 'nextra/components'\nimport {RefreshCw } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# 间距系统","processed":"# Spacing system"}
{"targetLocale":"en","key":"md-section-2","source":"间距和尺寸是设计系统中的关键元素，它们帮助我们创建一致的视觉层次和布局节奏。让我们来看看如何组织这些重要的设计变量。","processed":"Spacing and dimensions are key elements in a design system, helping us create consistent visual hierarchy and layout rhythm. Let's take a look at how to organize these important design variables."}
{"targetLocale":"en","key":"md-section-3","source":"## 顶层目录","processed":"## Top-level directory"}
{"targetLocale":"en","key":"md-section-4","source":"请使用 `spacing` 作为所有间距和尺寸变量的顶层目录。以下是一些常见的命名示例：\n\n语义化命名：\n- `spacing/sm` - 小间距，适用于紧凑的元素布局\n- `spacing/md` - 中等间距，适用于常规元素间距\n- `spacing/lg` - 大间距，适用于区块分隔\n- `spacing/xl` - 超大间距，适用于主要区域分隔\n\n数值化命名（原子化变量）：\n- `spacing/0` - 无间距 (0px)\n- `spacing/1` - 最小间距 (通常 4px)\n- `spacing/2` - 双倍最小间距 (通常 8px)\n- `spacing/4` - 四倍最小间距 (通常 16px)\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\n在 Tailwind CSS 项目中，遵循顶层目录的要求是必须的。\n</Callout> */}","processed":"Please use `spacing` as the top-level directory for all spacing and dimension variables. Here are some common naming examples:\n\nSemantic naming:\n- `spacing/sm` - small spacing, suitable for compact element layouts\n- `spacing/md` - medium spacing, suitable for regular element spacing\n- `spacing/lg` - large spacing, suitable for block separation\n- `spacing/xl` - extra large spacing, suitable for main area separation\n\nNumeric naming (atomic variables):\n- `spacing/0` - no spacing (0px)\n- `spacing/1` - minimum spacing (usually 4px)\n- `spacing/2` - double minimum spacing (usually 8px)\n- `spacing/4` - quadruple minimum spacing (usually 16px)\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\nIn Tailwind CSS projects, following the top-level directory requirement is mandatory.\n</Callout> */}"}
{"targetLocale":"en","key":"md-section-5","source":"## 单位转换","processed":"## Unit conversion"}
{"targetLocale":"en","key":"md-section-6","source":"Variables Xporter 提供了智能的单位转换功能。你可以在 Figma 中使用更直观的 px 单位进行设计，然后在导出时选择\"使用 Rem 单位\"选项，工具会自动将其转换为可访问性友好的 rem 单位。\n\n\n了解单位转换的更多内容：\n\n  <Cards.Card\n    icon={<RefreshCw  />}\n    title=\"单位转换\"\n    href=\"/docs/features/unit-conversion\"\n    className=\"mt-4\"\n  />","processed":"Variables Xporter provides intelligent unit conversion functionality. You can use the more intuitive px units for design in Figma, and then choose the \"Use Rem Units\" option when exporting. The tool will automatically convert them to accessibility-friendly rem units.\n\n\nLearn more about unit conversion:\n\n  <Cards.Card\n    icon={<RefreshCw  />}\n    title=\"Unit conversion\"\n    href=\"/docs/features/unit-conversion\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout,Cards } from 'nextra/components'\nimport {RefreshCw } from 'lucide-react'","processed":"import { Callout,Cards } from 'nextra/components'\nimport {RefreshCw } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# 间距系统","processed":"# Système d'espacement"}
{"targetLocale":"fr","key":"md-section-2","source":"间距和尺寸是设计系统中的关键元素，它们帮助我们创建一致的视觉层次和布局节奏。让我们来看看如何组织这些重要的设计变量。","processed":"L'espacement et les dimensions sont des éléments clés dans un système de design, aidant à créer une hiérarchie visuelle cohérente et un rythme de mise en page. Examinons comment organiser ces importantes variables de design."}
{"targetLocale":"fr","key":"md-section-3","source":"## 顶层目录","processed":"## Répertoire de premier niveau"}
{"targetLocale":"fr","key":"md-section-4","source":"请使用 `spacing` 作为所有间距和尺寸变量的顶层目录。以下是一些常见的命名示例：\n\n语义化命名：\n- `spacing/sm` - 小间距，适用于紧凑的元素布局\n- `spacing/md` - 中等间距，适用于常规元素间距\n- `spacing/lg` - 大间距，适用于区块分隔\n- `spacing/xl` - 超大间距，适用于主要区域分隔\n\n数值化命名（原子化变量）：\n- `spacing/0` - 无间距 (0px)\n- `spacing/1` - 最小间距 (通常 4px)\n- `spacing/2` - 双倍最小间距 (通常 8px)\n- `spacing/4` - 四倍最小间距 (通常 16px)\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\n在 Tailwind CSS 项目中，遵循顶层目录的要求是必须的。\n</Callout> */}","processed":"Veuillez utiliser `spacing` comme répertoire de premier niveau pour toutes les variables d'espacement et de dimension. Voici quelques exemples courants de nommage :\n\nNommage sémantique :\n- `spacing/sm` - Petit espacement, adapté aux mises en page d'éléments compacts\n- `spacing/md` - Espacement moyen, adapté à l'espacement régulier entre les éléments\n- `spacing/lg` - Grand espacement, adapté à la séparation des blocs\n- `spacing/xl` - Très grand espacement, adapté à la séparation des zones principales\n\nNommage numérique (variables atomiques) :\n- `spacing/0` - Pas d'espacement (0px)\n- `spacing/1` - Espacement minimal (généralement 4px)\n- `spacing/2` - Double de l'espacement minimal (généralement 8px)\n- `spacing/4` - Quadruple de l'espacement minimal (généralement 16px)\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\nDans les projets Tailwind CSS, le respect de l'exigence du répertoire de premier niveau est obligatoire.\n</Callout> */}"}
{"targetLocale":"fr","key":"md-section-5","source":"## 单位转换","processed":"## Conversion d'unités"}
{"targetLocale":"fr","key":"md-section-6","source":"Variables Xporter 提供了智能的单位转换功能。你可以在 Figma 中使用更直观的 px 单位进行设计，然后在导出时选择\"使用 Rem 单位\"选项，工具会自动将其转换为可访问性友好的 rem 单位。\n\n\n了解单位转换的更多内容：\n\n  <Cards.Card\n    icon={<RefreshCw  />}\n    title=\"单位转换\"\n    href=\"/docs/features/unit-conversion\"\n    className=\"mt-4\"\n  />","processed":"Variables Xporter offre une fonction intelligente de conversion d'unités. Vous pouvez utiliser des unités px plus intuitives dans Figma pour la conception, puis choisir l'option \"Utiliser les unités Rem\" lors de l'exportation. L'outil convertira automatiquement en unités rem, plus adaptées à l'accessibilité.\n\n\nPour en savoir plus sur la conversion d'unités :\n\n  <Cards.Card\n    icon={<RefreshCw  />}\n    title=\"Conversion d'unités\"\n    href=\"/docs/features/unit-conversion\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-0","source":"# 其他设计变量","processed":"# Other design variables"}
{"targetLocale":"en","key":"md-section-1","source":"import { Callout } from 'nextra/components'\n\n在设计系统中，除了颜色、排版和间距外，还有许多其他重要的设计变量。让我们来看看如何组织这些变量，以保持设计系统的一致性和可维护性。","processed":"import { Callout } from 'nextra/components'\n\nIn a design system, besides colors, typography, and spacing, there are many other important design variables. Let's look at how to organize these variables to maintain consistency and maintainability in the design system."}
{"targetLocale":"en","key":"md-section-2","source":"## 其他样式","processed":"## Other styles"}
{"targetLocale":"en","key":"md-section-3","source":"### 响应式断点","processed":"### Responsive breakpoints"}
{"targetLocale":"en","key":"md-section-4","source":"使用 `breakpoint` 或 `screens` 作为顶层目录：\n\n- `breakpoint/sm`\n- `breakpoint/md`\n- `breakpoint/lg`\n\n- `screens/sm`\n- `screens/md`\n- `screens/lg`","processed":"Use `breakpoint` or `screens` as the top-level directory:\n\n- `breakpoint/sm`\n- `breakpoint/md`\n- `breakpoint/lg`\n\n- `screens/sm`\n- `screens/md`\n- `screens/lg`"}
{"targetLocale":"en","key":"md-section-5","source":"### `border-radius`","processed":"### `border-radius`"}
{"targetLocale":"en","key":"md-section-6","source":"使用 `border-radius` 或 `radius` 作为顶层目录：\n- `border-radius/sm`\n- `border-radius/md`\n- `border-radius/lg`\n\n- `radius/sm`\n- `radius/md`\n- `radius/lg`","processed":"Use `border-radius` or `radius` as the top-level directory:\n- `border-radius/sm`\n- `border-radius/md`\n- `border-radius/lg`\n\n- `radius/sm`\n- `radius/md`\n- `radius/lg`"}
{"targetLocale":"en","key":"md-section-7","source":"### `filter:blur()`","processed":"### `filter:blur()`"}
{"targetLocale":"en","key":"md-section-8","source":"使用 `blur` 作为顶层目录：\n- `blur/sm`\n- `blur/md`\n- `blur/lg`\n\n你可以在 [Tailwind CSS 主题配置参考](https://tailwindcss.com/docs/theme#theme-variable-namespaces) 中查看完整的配置键列表。","processed":"Use `blur` as the top-level directory:\n- `blur/sm`\n- `blur/md`\n- `blur/lg`\n\nYou can view the complete list of configuration keys in the [Tailwind CSS theme configuration reference](https://tailwindcss.com/docs/theme#theme-variable-namespaces)."}
{"targetLocale":"en","key":"md-section-9","source":"## 组件级变量","processed":"## Component-level variables"}
{"targetLocale":"en","key":"md-section-10","source":"对于组件级变量，顶层目录请依然遵循此文档中的原则，但是需要将组件名称作为第二层，例如：\n- `colors/button/DEFAULT`\n- `colors/button/foreground`\n- `colors/button/border`\n\n- `colors/input/DEFAULT`\n\n- `colors/card/DEFAULT`\n- `colors/card/foreground`\n- `colors/card/border`","processed":"For component-level variables, the top-level directory should still follow the principles in this document, but the component name should be used as the second layer, for example:\n- `colors/button/DEFAULT`\n- `colors/button/foreground`\n- `colors/button/border`\n\n- `colors/input/DEFAULT`\n\n- `colors/card/DEFAULT`\n- `colors/card/foreground`\n- `colors/card/border`"}
{"targetLocale":"fr","key":"md-section-0","source":"# 其他设计变量","processed":"# Autres variables de design"}
{"targetLocale":"fr","key":"md-section-1","source":"import { Callout } from 'nextra/components'\n\n在设计系统中，除了颜色、排版和间距外，还有许多其他重要的设计变量。让我们来看看如何组织这些变量，以保持设计系统的一致性和可维护性。","processed":"import { Callout } from 'nextra/components'\n\nDans un système de design, en plus des couleurs, de la typographie et de l'espacement, il existe de nombreuses autres variables de design importantes. Examinons comment organiser ces variables pour maintenir la cohérence et la maintenabilité du système de design."}
{"targetLocale":"fr","key":"md-section-2","source":"## 其他样式","processed":"## Autres styles"}
{"targetLocale":"fr","key":"md-section-3","source":"### 响应式断点","processed":"### Points de rupture responsives"}
{"targetLocale":"fr","key":"md-section-4","source":"使用 `breakpoint` 或 `screens` 作为顶层目录：\n\n- `breakpoint/sm`\n- `breakpoint/md`\n- `breakpoint/lg`\n\n- `screens/sm`\n- `screens/md`\n- `screens/lg`","processed":"Utilisez `breakpoint` ou `screens` comme répertoire de premier niveau :\n\n- `breakpoint/sm`\n- `breakpoint/md`\n- `breakpoint/lg`\n\n- `screens/sm`\n- `screens/md`\n- `screens/lg`"}
{"targetLocale":"fr","key":"md-section-5","source":"### `border-radius`","processed":"### `border-radius`"}
{"targetLocale":"fr","key":"md-section-6","source":"使用 `border-radius` 或 `radius` 作为顶层目录：\n- `border-radius/sm`\n- `border-radius/md`\n- `border-radius/lg`\n\n- `radius/sm`\n- `radius/md`\n- `radius/lg`","processed":"Utilisez `border-radius` ou `radius` comme répertoire de premier niveau :\n- `border-radius/sm`\n- `border-radius/md`\n- `border-radius/lg`\n\n- `radius/sm`\n- `radius/md`\n- `radius/lg`"}
{"targetLocale":"fr","key":"md-section-7","source":"### `filter:blur()`","processed":"### `filter:blur()`"}
{"targetLocale":"fr","key":"md-section-8","source":"使用 `blur` 作为顶层目录：\n- `blur/sm`\n- `blur/md`\n- `blur/lg`\n\n你可以在 [Tailwind CSS 主题配置参考](https://tailwindcss.com/docs/theme#theme-variable-namespaces) 中查看完整的配置键列表。","processed":"Utilisez `blur` comme répertoire de premier niveau :\n- `blur/sm`\n- `blur/md`\n- `blur/lg`\n\nVous pouvez consulter la liste complète des clés de configuration dans la [référence de configuration du thème Tailwind CSS](https://tailwindcss.com/docs/theme#theme-variable-namespaces)."}
{"targetLocale":"fr","key":"md-section-9","source":"## 组件级变量","processed":"## Variables au niveau des composants"}
{"targetLocale":"fr","key":"md-section-10","source":"对于组件级变量，顶层目录请依然遵循此文档中的原则，但是需要将组件名称作为第二层，例如：\n- `colors/button/DEFAULT`\n- `colors/button/foreground`\n- `colors/button/border`\n\n- `colors/input/DEFAULT`\n\n- `colors/card/DEFAULT`\n- `colors/card/foreground`\n- `colors/card/border`","processed":"Pour les variables au niveau des composants, suivez toujours les principes de ce document pour le répertoire de premier niveau, mais utilisez le nom du composant comme deuxième niveau, par exemple :\n- `colors/button/DEFAULT`\n- `colors/button/foreground`\n- `colors/button/border`\n\n- `colors/input/DEFAULT`\n\n- `colors/card/DEFAULT`\n- `colors/card/foreground`\n- `colors/card/border`"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Tabs } from 'nextra/components'","processed":"import { Callout } from 'nextra/components'\nimport { Tabs } from 'nextra/components'"}
{"targetLocale":"en","key":"md-section-1","source":"# 颜色系统","processed":"# Color system"}
{"targetLocale":"en","key":"md-section-2","source":"颜色系用几乎是 Design Tokens 里最重要的部分，如果你对颜色类变量的组织和命名没有头绪，[shadcn/ui 的命名约定](https://ui.shadcn.com/docs/theming#convention)是一个很好的开始：\n一般情况下，`background` 用于背景颜色，`foreground` 用于文本颜色，当 `background` 用于组件的背景颜色时，如 `colors/card/DEFAULT`[^1]，则省略 `background` 后缀，从这个基础出发逐渐扩展到更多的变量：\n\n{/* - `--background` - 背景色\n- `--foreground` - 前景色/文本色\n- `--muted` - 柔和的背景色\n- `--muted-foreground` - 柔和的前景色\n- `--popover` - 弹出层背景色\n- `--popover-foreground` - 弹出层前景色\n- `--card` - 卡片背景色\n- `--card-foreground` - 卡片前景色\n- `--border` - 边框色\n- `--input` - 输入框边框色\n- `--primary` - 主色调\n- `--primary-foreground` - 主色调上的前景色\n- `--secondary` - 次色调\n- `--secondary-foreground` - 次色调上的前景色\n- `--accent` - 强调色\n- `--accent-foreground` - 强调色上的前景色\n- `--destructive` - 危险/警告色\n- `--destructive-foreground` - 危险/警告色上的前景色\n- `--ring` - 聚焦环的颜色\n\n<Callout type=\"warning\" emoji=\"⚠️\">\n  以上是 CSS Variables，请不要在 Figma 中使用 `--` 作为任何变量的前缀。\n</Callout> */}\n\n{/* 对应到 Figma 中，可以使用以下命名约定： */}\n\n<details>\n  {/* prettier-ignore */}\n  <summary>shadcn/ui 颜色变量命名参考</summary>\n- `colors/background/DEFAULT` - 页面主背景色\n- `colors/foreground/DEFAULT` - 主要文本颜色\n- `colors/muted/DEFAULT` - 次要背景色，用于柔和的视觉层次\n- `colors/muted/foreground` - 次要文本颜色，用于辅助信息\n- `colors/popover/DEFAULT` - 弹出层背景色，确保与主背景有适当区分\n- `colors/popover/foreground` - 弹出层文本颜色\n- `colors/card/DEFAULT` - 卡片背景色，用于内容区块\n- `colors/card/foreground` - 卡片内文本颜色\n- `colors/border/DEFAULT` - 边框颜色，用于分隔视觉元素\n- `colors/input/DEFAULT` - 输入框边框颜色\n- `colors/primary/DEFAULT` - 品牌主色调，用于主要按钮和重点元素\n- `colors/primary/foreground` - 主色调上的文本颜色\n- `colors/secondary/DEFAULT` - 品牌次色调，用于次要操作和界面元素\n- `colors/secondary/foreground` - 次色调上的文本颜色\n- `colors/accent/DEFAULT` - 强调色，用于突出显示特定元素\n- `colors/accent/foreground` - 强调色上的文本颜色\n- `colors/destructive/DEFAULT` - 警示色，用于危险操作和错误提示\n- `colors/destructive/foreground` - 警示色上的文本颜色\n- `colors/ring/DEFAULT` - 焦点环颜色，用于交互反馈\n</details>\n\n\n{/* <Callout type=\"info\" emoji=\"💡\">\n  Variables Xporter 会自动生成[符合 Tailwind CSS 规则](https://tailwindcss.com/docs/customizing-colors#using-css-variables)的颜色类 CSS 变量，并且支持与不透明度修饰符一起使用。\n</Callout> */}","processed":"The color system is arguably the most important part of Design Tokens. If you're unsure about how to organize and name color variables, [shadcn/ui's naming convention](https://ui.shadcn.com/docs/theming#convention) is a great starting point:\n\nGenerally, `background` is used for background colors, `foreground` is used for text colors. When `background` is used for a component's background color, such as `colors/card/DEFAULT`[^1], the `background` suffix is omitted. From this foundation, you can gradually expand to more variables:\n\n{/* - `--background` - Background color\n- `--foreground` - Foreground/text color\n- `--muted` - Muted background color\n- `--muted-foreground` - Muted foreground color\n- `--popover` - Popover background color\n- `--popover-foreground` - Popover foreground color\n- `--card` - Card background color\n- `--card-foreground` - Card foreground color\n- `--border` - Border color\n- `--input` - Input border color\n- `--primary` - Primary color\n- `--primary-foreground` - Foreground color on primary\n- `--secondary` - Secondary color\n- `--secondary-foreground` - Foreground color on secondary\n- `--accent` - Accent color\n- `--accent-foreground` - Foreground color on accent\n- `--destructive` - Destructive/warning color\n- `--destructive-foreground` - Foreground color on destructive\n- `--ring` - Focus ring color\n\n<Callout type=\"warning\" emoji=\"⚠️\">\n  The above are CSS Variables. Please do not use `--` as a prefix for any variables in Figma.\n</Callout> */}\n\n{/* Corresponding to Figma, you can use the following naming convention: */}\n\n<details>\n  {/* prettier-ignore */}\n  <summary>shadcn/ui color variable naming reference</summary>\n- `colors/background/DEFAULT` - Main page background color\n- `colors/foreground/DEFAULT` - Main text color\n- `colors/muted/DEFAULT` - Secondary background color, used for subtle visual hierarchy\n- `colors/muted/foreground` - Secondary text color, used for auxiliary information\n- `colors/popover/DEFAULT` - Popover background color, ensure proper distinction from main background\n- `colors/popover/foreground` - Popover text color\n- `colors/card/DEFAULT` - Card background color, used for content blocks\n- `colors/card/foreground` - Text color within cards\n- `colors/border/DEFAULT` - Border color, used to separate visual elements\n- `colors/input/DEFAULT` - Input field border color\n- `colors/primary/DEFAULT` - Brand primary color, used for main buttons and key elements\n- `colors/primary/foreground` - Text color on primary color\n- `colors/secondary/DEFAULT` - Brand secondary color, used for secondary actions and interface elements\n- `colors/secondary/foreground` - Text color on secondary color\n- `colors/accent/DEFAULT` - Accent color, used to highlight specific elements\n- `colors/accent/foreground` - Text color on accent color\n- `colors/destructive/DEFAULT` - Warning color, used for dangerous actions and error notifications\n- `colors/destructive/foreground` - Text color on warning color\n- `colors/ring/DEFAULT` - Focus ring color, used for interaction feedback\n</details>\n\n\n{/* <Callout type=\"info\" emoji=\"💡\">\n  Variables Xporter will automatically generate color class CSS variables [compliant with Tailwind CSS rules](https://tailwindcss.com/docs/customizing-colors#using-css-variables), and supports use with opacity modifiers.\n</Callout> */}"}
{"targetLocale":"en","key":"md-section-3","source":"## 顶层目录","processed":"## Top-level directory"}
{"targetLocale":"en","key":"md-section-4","source":"请使用 `colors` 或 `color` 作为所有颜色相关变量的顶层目录。这不仅让你的变量结构更加清晰，也确保了与 Tailwind CSS 的完美兼容。\n\n<figure className=\"mt-6\">\n  <>![组织颜色类变量](/organizing-your-variables/colors/colors-1.png)</>\n  <figcaption>\n    组织颜色类变量\n  </figcaption>\n</figure>\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\n  在 Tailwind CSS 项目中，颜色变量的顶层目录必须是 `colors`。这是因为 Tailwind CSS 的配置系统专门使用 `colors` 配置键来处理颜色相关的样式定义。使用其他名称可能导致颜色变量无法被正确识别和使用。\n</Callout> */}","processed":"Please use `colors` or `color` as the top-level directory for all color-related variables. This not only makes your variable structure clearer but also ensures perfect compatibility with Tailwind CSS.\n\n<figure className=\"mt-6\">\n  <>![Organizing color variables](/organizing-your-variables/colors/colors-1.png)</>\n  <figcaption>\n    Organizing color variables\n  </figcaption>\n</figure>\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\n  In Tailwind CSS projects, the top-level directory for color variables must be `colors`. This is because Tailwind CSS's configuration system specifically uses the `colors` configuration key to handle color-related style definitions. Using other names may result in color variables not being correctly recognized and used.\n</Callout> */}"}
{"targetLocale":"en","key":"md-section-5","source":"## 不透明度修饰符","processed":"## Opacity modifiers"}
{"targetLocale":"en","key":"md-section-6","source":"Variables Xporter 提供了强大的颜色处理功能，它会自动为你生成[符合 Tailwind CSS 规则](https://tailwindcss.com/docs/customizing-colors#using-css-variables)的颜色变量。在开发过程中，你可以轻松地使用不透明度修饰符灵活调整颜色的透明度，无需额外的变量定义。\n\n\n  ```html\n  <!-- 文本透明度调整 -->\n  <div class=\"text-primary/80\">文本透明度调整</div>\n  <div class=\"text-secondary/60\">文本透明度调整</div>\n\n  <!-- 背景透明度调整 -->\n  <div class=\"bg-primary/10\">背景透明度调整</div>\n  <div class=\"bg-accent/90\">背景透明度调整</div>\n\n  <!-- 边框透明度调整 -->\n  <div class=\"border-2 border-primary/30\">边框透明度调整</div>\n  ```","processed":"Variables Xporter provides powerful color processing capabilities, automatically generating color variables that [comply with Tailwind CSS rules](https://tailwindcss.com/docs/customizing-colors#using-css-variables). During development, you can easily use opacity modifiers to flexibly adjust the transparency of colors without the need for additional variable definitions.\n\n\n  ```html\n  <!-- Text opacity adjustment -->\n  <div class=\"text-primary/80\">Text opacity adjustment</div>\n  <div class=\"text-secondary/60\">Text opacity adjustment</div>\n\n  <!-- Background opacity adjustment -->\n  <div class=\"bg-primary/10\">Background opacity adjustment</div>\n  <div class=\"bg-accent/90\">Background opacity adjustment</div>\n\n  <!-- Border opacity adjustment -->\n  <div class=\"border-2 border-primary/30\">Border opacity adjustment</div>\n  ```"}
{"targetLocale":"en","key":"md-section-7","source":"[^1]: `DEFAULT` 关键字是组织变量层级的一种方式，[了解更多](/docs/organizing-your-variables/principles#use-default-value)","processed":"[^1]: The `DEFAULT` keyword is a way to organize variable hierarchy, [learn more](/docs/organizing-your-variables/principles#use-default-value)"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Tabs } from 'nextra/components'","processed":"import { Callout } from 'nextra/components'\nimport { Tabs } from 'nextra/components'"}
{"targetLocale":"fr","key":"md-section-1","source":"# 颜色系统","processed":"# Système de couleurs"}
{"targetLocale":"fr","key":"md-section-2","source":"颜色系用几乎是 Design Tokens 里最重要的部分，如果你对颜色类变量的组织和命名没有头绪，[shadcn/ui 的命名约定](https://ui.shadcn.com/docs/theming#convention)是一个很好的开始：\n一般情况下，`background` 用于背景颜色，`foreground` 用于文本颜色，当 `background` 用于组件的背景颜色时，如 `colors/card/DEFAULT`[^1]，则省略 `background` 后缀，从这个基础出发逐渐扩展到更多的变量：\n\n{/* - `--background` - 背景色\n- `--foreground` - 前景色/文本色\n- `--muted` - 柔和的背景色\n- `--muted-foreground` - 柔和的前景色\n- `--popover` - 弹出层背景色\n- `--popover-foreground` - 弹出层前景色\n- `--card` - 卡片背景色\n- `--card-foreground` - 卡片前景色\n- `--border` - 边框色\n- `--input` - 输入框边框色\n- `--primary` - 主色调\n- `--primary-foreground` - 主色调上的前景色\n- `--secondary` - 次色调\n- `--secondary-foreground` - 次色调上的前景色\n- `--accent` - 强调色\n- `--accent-foreground` - 强调色上的前景色\n- `--destructive` - 危险/警告色\n- `--destructive-foreground` - 危险/警告色上的前景色\n- `--ring` - 聚焦环的颜色\n\n<Callout type=\"warning\" emoji=\"⚠️\">\n  以上是 CSS Variables，请不要在 Figma 中使用 `--` 作为任何变量的前缀。\n</Callout> */}\n\n{/* 对应到 Figma 中，可以使用以下命名约定： */}\n\n<details>\n  {/* prettier-ignore */}\n  <summary>shadcn/ui 颜色变量命名参考</summary>\n- `colors/background/DEFAULT` - 页面主背景色\n- `colors/foreground/DEFAULT` - 主要文本颜色\n- `colors/muted/DEFAULT` - 次要背景色，用于柔和的视觉层次\n- `colors/muted/foreground` - 次要文本颜色，用于辅助信息\n- `colors/popover/DEFAULT` - 弹出层背景色，确保与主背景有适当区分\n- `colors/popover/foreground` - 弹出层文本颜色\n- `colors/card/DEFAULT` - 卡片背景色，用于内容区块\n- `colors/card/foreground` - 卡片内文本颜色\n- `colors/border/DEFAULT` - 边框颜色，用于分隔视觉元素\n- `colors/input/DEFAULT` - 输入框边框颜色\n- `colors/primary/DEFAULT` - 品牌主色调，用于主要按钮和重点元素\n- `colors/primary/foreground` - 主色调上的文本颜色\n- `colors/secondary/DEFAULT` - 品牌次色调，用于次要操作和界面元素\n- `colors/secondary/foreground` - 次色调上的文本颜色\n- `colors/accent/DEFAULT` - 强调色，用于突出显示特定元素\n- `colors/accent/foreground` - 强调色上的文本颜色\n- `colors/destructive/DEFAULT` - 警示色，用于危险操作和错误提示\n- `colors/destructive/foreground` - 警示色上的文本颜色\n- `colors/ring/DEFAULT` - 焦点环颜色，用于交互反馈\n</details>\n\n\n{/* <Callout type=\"info\" emoji=\"💡\">\n  Variables Xporter 会自动生成[符合 Tailwind CSS 规则](https://tailwindcss.com/docs/customizing-colors#using-css-variables)的颜色类 CSS 变量，并且支持与不透明度修饰符一起使用。\n</Callout> */}","processed":"Le système de couleurs est probablement la partie la plus importante des Design Tokens. Si vous ne savez pas comment organiser et nommer vos variables de couleur, [la convention de nommage de shadcn/ui](https://ui.shadcn.com/docs/theming#convention) est un excellent point de départ :\nEn général, `background` est utilisé pour les couleurs de fond, `foreground` pour les couleurs de texte. Lorsque `background` est utilisé pour la couleur de fond d'un composant, comme `colors/card/DEFAULT`[^1], le suffixe `background` est omis. À partir de cette base, on peut progressivement étendre à plus de variables :\n\n<details>\n  <summary>Référence de nommage des variables de couleur shadcn/ui</summary>\n- `colors/background/DEFAULT` - Couleur de fond principale de la page\n- `colors/foreground/DEFAULT` - Couleur de texte principale\n- `colors/muted/DEFAULT` - Couleur de fond secondaire, pour une hiérarchie visuelle douce\n- `colors/muted/foreground` - Couleur de texte secondaire, pour les informations auxiliaires\n- `colors/popover/DEFAULT` - Couleur de fond des pop-ups, assurez-vous qu'elle se distingue bien du fond principal\n- `colors/popover/foreground` - Couleur de texte des pop-ups\n- `colors/card/DEFAULT` - Couleur de fond des cartes, pour les zones de contenu\n- `colors/card/foreground` - Couleur de texte à l'intérieur des cartes\n- `colors/border/DEFAULT` - Couleur de bordure, pour séparer les éléments visuels\n- `colors/input/DEFAULT` - Couleur de bordure des champs de saisie\n- `colors/primary/DEFAULT` - Couleur principale de la marque, pour les boutons principaux et les éléments importants\n- `colors/primary/foreground` - Couleur de texte sur la couleur principale\n- `colors/secondary/DEFAULT` - Couleur secondaire de la marque, pour les actions secondaires et les éléments d'interface\n- `colors/secondary/foreground` - Couleur de texte sur la couleur secondaire\n- `colors/accent/DEFAULT` - Couleur d'accentuation, pour mettre en évidence des éléments spécifiques\n- `colors/accent/foreground` - Couleur de texte sur la couleur d'accentuation\n- `colors/destructive/DEFAULT` - Couleur d'avertissement, pour les actions dangereuses et les messages d'erreur\n- `colors/destructive/foreground` - Couleur de texte sur la couleur d'avertissement\n- `colors/ring/DEFAULT` - Couleur de l'anneau de focus, pour le retour d'interaction\n</details>"}
{"targetLocale":"fr","key":"md-section-3","source":"## 顶层目录","processed":"## Répertoire de premier niveau"}
{"targetLocale":"fr","key":"md-section-4","source":"请使用 `colors` 或 `color` 作为所有颜色相关变量的顶层目录。这不仅让你的变量结构更加清晰，也确保了与 Tailwind CSS 的完美兼容。\n\n<figure className=\"mt-6\">\n  <>![组织颜色类变量](/organizing-your-variables/colors/colors-1.png)</>\n  <figcaption>\n    组织颜色类变量\n  </figcaption>\n</figure>\n\n{/* <Callout type=\"error\" emoji=\"🚨\">\n  在 Tailwind CSS 项目中，颜色变量的顶层目录必须是 `colors`。这是因为 Tailwind CSS 的配置系统专门使用 `colors` 配置键来处理颜色相关的样式定义。使用其他名称可能导致颜色变量无法被正确识别和使用。\n</Callout> */}","processed":"Veuillez utiliser `colors` ou `color` comme répertoire de premier niveau pour toutes les variables liées aux couleurs. Cela rend non seulement la structure de vos variables plus claire, mais assure également une parfaite compatibilité avec Tailwind CSS.\n\n<figure className=\"mt-6\">\n  <>![Organisation des variables de couleur](/organizing-your-variables/colors/colors-1.png)</>\n  <figcaption>\n    Organisation des variables de couleur\n  </figcaption>\n</figure>"}
{"targetLocale":"fr","key":"md-section-5","source":"## 不透明度修饰符","processed":"## Modificateurs d'opacité"}
{"targetLocale":"fr","key":"md-section-6","source":"Variables Xporter 提供了强大的颜色处理功能，它会自动为你生成[符合 Tailwind CSS 规则](https://tailwindcss.com/docs/customizing-colors#using-css-variables)的颜色变量。在开发过程中，你可以轻松地使用不透明度修饰符灵活调整颜色的透明度，无需额外的变量定义。\n\n\n  ```html\n  <!-- 文本透明度调整 -->\n  <div class=\"text-primary/80\">文本透明度调整</div>\n  <div class=\"text-secondary/60\">文本透明度调整</div>\n\n  <!-- 背景透明度调整 -->\n  <div class=\"bg-primary/10\">背景透明度调整</div>\n  <div class=\"bg-accent/90\">背景透明度调整</div>\n\n  <!-- 边框透明度调整 -->\n  <div class=\"border-2 border-primary/30\">边框透明度调整</div>\n  ```","processed":"Variables Xporter offre de puissantes fonctionnalités de traitement des couleurs, générant automatiquement des variables de couleur [conformes aux règles de Tailwind CSS](https://tailwindcss.com/docs/customizing-colors#using-css-variables). Pendant le développement, vous pouvez facilement ajuster la transparence des couleurs en utilisant des modificateurs d'opacité, sans avoir besoin de définir des variables supplémentaires.\n\n\n  ```html\n  <!-- Ajustement de l'opacité du texte -->\n  <div class=\"text-primary/80\">Ajustement de l'opacité du texte</div>\n  <div class=\"text-secondary/60\">Ajustement de l'opacité du texte</div>\n\n  <!-- Ajustement de l'opacité du fond -->\n  <div class=\"bg-primary/10\">Ajustement de l'opacité du fond</div>\n  <div class=\"bg-accent/90\">Ajustement de l'opacité du fond</div>\n\n  <!-- Ajustement de l'opacité de la bordure -->\n  <div class=\"border-2 border-primary/30\">Ajustement de l'opacité de la bordure</div>\n  ```"}
{"targetLocale":"fr","key":"md-section-7","source":"[^1]: `DEFAULT` 关键字是组织变量层级的一种方式，[了解更多](/docs/organizing-your-variables/principles#use-default-value)","processed":"[^1]: Le mot-clé `DEFAULT` est une façon d'organiser la hiérarchie des variables, [en savoir plus](/docs/organizing-your-variables/principles#use-default-value)"}
{"targetLocale":"en","key":"md-section-0","source":"# 单位转换","processed":"# Unit conversion"}
{"targetLocale":"en","key":"md-section-1","source":"Variables Xporter 提供了单位转换功能，可以自动将 Figma 中的 px 单位转换 Tailwind CSS 中默认的 rem 单位。","processed":"Variables Xporter provides a unit conversion feature that automatically converts px units in Figma to rem units, which are the default in Tailwind CSS."}
{"targetLocale":"en","key":"md-section-2","source":"## 如何使用","processed":"## How to use"}
{"targetLocale":"en","key":"md-section-3","source":"1. 导出时勾选\"使用 Rem 单位\"选项\n2. Variables Xporter 会自动将 px 转换为 rem（基于 16px = 1rem）\n\n例如：\n```css\n:root{\n/* Figma 中的值 */\n--spacing-lg: 24px;\n--font-size-base: 16px;\n\n/* 导出后的值（启用 rem 转换） */\n--spacing-lg: 1.5rem;    /* 24/16 = 1.5 */\n--font-size-base: 1rem;  /* 16/16 = 1 */\n}\n```","processed":"1. Check the \"Use Rem units\" option when exporting\n2. Variables Xporter will automatically convert px to rem (based on 16px = 1rem)\n\nFor example:\n```css\n:root{\n/* Values in Figma */\n--spacing-lg: 24px;\n--font-size-base: 16px;\n\n/* Exported values (with rem conversion enabled) */\n--spacing-lg: 1.5rem;    /* 24/16 = 1.5 */\n--font-size-base: 1rem;  /* 16/16 = 1 */\n}\n```"}
{"targetLocale":"en","key":"md-section-4","source":"## 不会转换的变量","processed":"## Variables that won't be converted"}
{"targetLocale":"en","key":"md-section-5","source":"并非所有的变量的值都会被转换为 rem，以下情况是例外：\n\n- 非 `Number` 类型的变量\n- 当变量名包含 `px`，例如 `spacing/px`, 不会被转换为 rem\n- 当变量的值为数字但通常不会包含单位时，在生成的 CSS 中也不会包含任何单位，例如 opacity、scale 等\n\n除了以上条件的数字类型的变量，均会在勾选“使用 Rem 单位”时被转换","processed":"Not all variable values will be converted to rem. The following are exceptions:\n\n- Variables that are not of type `Number`\n- When the variable name contains `px`, e.g., `spacing/px`, it won't be converted to rem\n- When the variable's value is a number but typically doesn't include units, it won't include any units in the generated CSS, e.g., opacity, scale, etc.\n\nApart from the above conditions, all numeric type variables will be converted when the \"Use Rem units\" option is checked"}
{"targetLocale":"en","key":"md-section-6","source":"## rem 还是 px？","processed":"## rem or px?"}
{"targetLocale":"en","key":"md-section-7","source":"这是一个相当有争议的话题，虽然 Taiwind CSS 逐渐成为 Web 开发的标准，并且它默认使用 rem 单位，但是使用 rem 或者 px 都有各自的优缺点。\n建议查看 [Joshw Comeau 的这篇文章](https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/) 并结合项目的情况以及开发团队的建议来决定。","processed":"This is a rather controversial topic. Although Tailwind CSS is gradually becoming the standard for Web development and it uses rem units by default, both rem and px have their own advantages and disadvantages.\nIt's recommended to check out [this article by Josh Comeau](https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/) and make a decision based on your project's circumstances and your development team's recommendations."}
{"targetLocale":"en","key":"fm-attr-title","source":"单位转换","processed":"Unit conversion"}
{"targetLocale":"fr","key":"md-section-0","source":"# 单位转换","processed":"# Conversion d'unités"}
{"targetLocale":"fr","key":"md-section-1","source":"Variables Xporter 提供了单位转换功能，可以自动将 Figma 中的 px 单位转换 Tailwind CSS 中默认的 rem 单位。","processed":"Variables Xporter offre une fonctionnalité de conversion d'unités, qui peut automatiquement convertir les unités px de Figma en unités rem par défaut de Tailwind CSS."}
{"targetLocale":"fr","key":"md-section-2","source":"## 如何使用","processed":"## Comment l'utiliser"}
{"targetLocale":"fr","key":"md-section-3","source":"1. 导出时勾选\"使用 Rem 单位\"选项\n2. Variables Xporter 会自动将 px 转换为 rem（基于 16px = 1rem）\n\n例如：\n```css\n:root{\n/* Figma 中的值 */\n--spacing-lg: 24px;\n--font-size-base: 16px;\n\n/* 导出后的值（启用 rem 转换） */\n--spacing-lg: 1.5rem;    /* 24/16 = 1.5 */\n--font-size-base: 1rem;  /* 16/16 = 1 */\n}\n```","processed":"1. Cochez l'option \"Utiliser les unités Rem\" lors de l'exportation\n2. Variables Xporter convertira automatiquement les px en rem (basé sur 16px = 1rem)\n\nPar exemple :\n```css\n:root{\n/* Valeurs dans Figma */\n--spacing-lg: 24px;\n--font-size-base: 16px;\n\n/* Valeurs après exportation (avec conversion rem activée) */\n--spacing-lg: 1.5rem;    /* 24/16 = 1.5 */\n--font-size-base: 1rem;  /* 16/16 = 1 */\n}\n```"}
{"targetLocale":"fr","key":"md-section-4","source":"## 不会转换的变量","processed":"## Variables qui ne seront pas converties"}
{"targetLocale":"fr","key":"md-section-5","source":"并非所有的变量的值都会被转换为 rem，以下情况是例外：\n\n- 非 `Number` 类型的变量\n- 当变量名包含 `px`，例如 `spacing/px`, 不会被转换为 rem\n- 当变量的值为数字但通常不会包含单位时，在生成的 CSS 中也不会包含任何单位，例如 opacity、scale 等\n\n除了以上条件的数字类型的变量，均会在勾选“使用 Rem 单位”时被转换","processed":"Toutes les valeurs des variables ne seront pas converties en rem. Voici les exceptions :\n\n- Les variables de type non `Number`\n- Lorsque le nom de la variable contient `px`, par exemple `spacing/px`, elle ne sera pas convertie en rem\n- Lorsque la valeur de la variable est un nombre mais n'inclut généralement pas d'unité, aucune unité ne sera incluse dans le CSS généré, par exemple pour l'opacité, l'échelle, etc.\n\nEn dehors de ces conditions, toutes les variables de type numérique seront converties lorsque l'option \"Utiliser les unités Rem\" est cochée"}
{"targetLocale":"fr","key":"md-section-6","source":"## rem 还是 px？","processed":"## rem ou px ?"}
{"targetLocale":"fr","key":"md-section-7","source":"这是一个相当有争议的话题，虽然 Taiwind CSS 逐渐成为 Web 开发的标准，并且它默认使用 rem 单位，但是使用 rem 或者 px 都有各自的优缺点。\n建议查看 [Joshw Comeau 的这篇文章](https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/) 并结合项目的情况以及开发团队的建议来决定。","processed":"C'est un sujet assez controversé. Bien que Tailwind CSS devienne progressivement la norme pour le développement Web et utilise par défaut l'unité rem, l'utilisation de rem ou de px présente chacune ses avantages et ses inconvénients.\nIl est recommandé de consulter [cet article de Josh Comeau](https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/) et de prendre une décision en fonction de la situation de votre projet et des recommandations de votre équipe de développement."}
{"targetLocale":"fr","key":"fm-attr-title","source":"单位转换","processed":"Conversion d'unités"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards, Tabs } from 'nextra/components'\nimport { Moon, Columns3 } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards, Tabs } from 'nextra/components'\nimport { Moon, Columns3 } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# 多模式支持","processed":"# Multi-mode support"}
{"targetLocale":"en","key":"md-section-2","source":"多模式支持是 Variables Xporter 的一个强大特性，它让你能够轻松导出多模式的设计变量，如明暗主题、品牌主题等。","processed":"Multi-mode support is a powerful feature of Variables Xporter that allows you to easily export design variables for multiple modes, such as light and dark themes, brand themes, and more."}
{"targetLocale":"en","key":"md-section-3","source":"## 什么是多模式？","processed":"## What are multi-modes?"}
{"targetLocale":"en","key":"md-section-4","source":"多模式允许一个变量在不同情况下拥有不同的值。了解常见的模式包括：\n\n- 明暗主题\n- 品牌主题\n- 响应式断点\n- 布局松散度\n\nVariables Xporter **支持复合的多模式变量**，例如 `colors/primary/DEFAULT`（主要颜色）变量可能同时受到明暗主题以及品牌主题的影响，这会导出以下结果：\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n@theme {\n  /* Collection: Design Tokens */\n  --color-brand-a-500: oklch(0.63 0.16 22.94);\n  --color-brand-a-600: oklch(0.54 0.17 24.90);\n  --color-brand-b-500: oklch(0.68 0.17 45.85);\n  --color-brand-b-600: oklch(0.63 0.19 39.71);\n  --color-primary: var(--theme-modes-color-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-color-primary-dark: var(--color-brand-a-500);\n  --brand-modes-color-primary-light: var(--color-brand-a-600);\n}\n\n/* Mode Override */\n@layer theme {\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-color-background-dark: var(--color-base-black);\n  --brand-modes-color-background-light: var(--color-base-white);\n  --brand-modes-color-primary-dark: var(--color-brand-b-500);\n  --brand-modes-color-primary-foreground-light: var(--color-base-white);\n  --brand-modes-color-primary-light: var(--color-brand-b-600);\n  }\n}\n\n/* Mode Override */\n@layer theme {\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-dark);\n  }\n}\n  ```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n    theme: {\n      extend: {\n        colors: {\n      'brand-a': {\n            '500': 'rgb(var(--colors-brand-a-500))',\n            '600': 'rgb(var(--colors-brand-a-600))',\n      },\n      'brand-b': {\n            '400': 'rgb(var(--colors-brand-b-400))',\n            '500': 'rgb(var(--colors-brand-b-500))',\n            '600': 'rgb(var(--colors-brand-b-600))',\n      },\n      primary: 'rgb(var(--colors-primary))',\n        }\n      },\n    },\n  };\n```\n    ```css\n  /* Default Mode */\n  :root {\n\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n  :root {\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\n现在，`colors/primary/DEFAULT` 变量在不同的明暗主题以及品牌主题下，都会呈现不一样的结果。\n\n了解如何在 Figma 中创建和管理多模式变量:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"多模式变量管理\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Multi-modes allow a variable to have different values in different scenarios. Common modes include:\n\n- Light and dark themes\n- Brand themes\n- Responsive breakpoints\n- Layout density\n\nVariables Xporter **supports compound multi-mode variables**. For example, the `colors/primary/DEFAULT` (primary color) variable might be affected by both light/dark themes and brand themes, resulting in the following output:\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n@theme {\n  /* Collection: Design Tokens */\n  --color-brand-a-500: oklch(0.63 0.16 22.94);\n  --color-brand-a-600: oklch(0.54 0.17 24.90);\n  --color-brand-b-500: oklch(0.68 0.17 45.85);\n  --color-brand-b-600: oklch(0.63 0.19 39.71);\n  --color-primary: var(--theme-modes-color-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-color-primary-dark: var(--color-brand-a-500);\n  --brand-modes-color-primary-light: var(--color-brand-a-600);\n}\n\n/* Mode Override */\n@layer theme {\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-color-background-dark: var(--color-base-black);\n  --brand-modes-color-background-light: var(--color-base-white);\n  --brand-modes-color-primary-dark: var(--color-brand-b-500);\n  --brand-modes-color-primary-foreground-light: var(--color-base-white);\n  --brand-modes-color-primary-light: var(--color-brand-b-600);\n  }\n}\n\n/* Mode Override */\n@layer theme {\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-dark);\n  }\n}\n  ```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n    theme: {\n      extend: {\n        colors: {\n      'brand-a': {\n            '500': 'rgb(var(--colors-brand-a-500))',\n            '600': 'rgb(var(--colors-brand-a-600))',\n      },\n      'brand-b': {\n            '400': 'rgb(var(--colors-brand-b-400))',\n            '500': 'rgb(var(--colors-brand-b-500))',\n            '600': 'rgb(var(--colors-brand-b-600))',\n      },\n      primary: 'rgb(var(--colors-primary))',\n        }\n      },\n    },\n  };\n```\n    ```css\n  /* Default Mode */\n  :root {\n\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n  :root {\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\nNow, the `colors/primary/DEFAULT` variable will display different results under various light/dark themes and brand themes.\n\nLearn how to create and manage multi-mode variables in Figma:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"Multi-mode variable management\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-5","source":"## 工作原理","processed":"## How it works"}
{"targetLocale":"en","key":"md-section-6","source":"Variables Xporter 会追溯所选的导出集合中所有引用的变量，直到找到变量的原始值。这意味着你可以跨集合引用变量，Variables Xporter 会完整的还原变量的引用链。","processed":"Variables Xporter traces all referenced variables in the selected export collection until it finds the original values of the variables. This means you can reference variables across collections, and Variables Xporter will fully reconstruct the variable reference chain."}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards, Tabs } from 'nextra/components'\nimport { Moon, Columns3 } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards, Tabs } from 'nextra/components'\nimport { Moon, Columns3 } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# 多模式支持","processed":"# Prise en charge multi-modes"}
{"targetLocale":"fr","key":"md-section-2","source":"多模式支持是 Variables Xporter 的一个强大特性，它让你能够轻松导出多模式的设计变量，如明暗主题、品牌主题等。","processed":"La prise en charge multi-modes est une fonctionnalité puissante de Variables Xporter qui vous permet d'exporter facilement des variables de design pour plusieurs modes, tels que les thèmes clair et sombre, les thèmes de marque, etc."}
{"targetLocale":"fr","key":"md-section-3","source":"## 什么是多模式？","processed":"## Qu'est-ce que le multi-modes ?"}
{"targetLocale":"fr","key":"md-section-4","source":"多模式允许一个变量在不同情况下拥有不同的值。了解常见的模式包括：\n\n- 明暗主题\n- 品牌主题\n- 响应式断点\n- 布局松散度\n\nVariables Xporter **支持复合的多模式变量**，例如 `colors/primary/DEFAULT`（主要颜色）变量可能同时受到明暗主题以及品牌主题的影响，这会导出以下结果：\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n@theme {\n  /* Collection: Design Tokens */\n  --color-brand-a-500: oklch(0.63 0.16 22.94);\n  --color-brand-a-600: oklch(0.54 0.17 24.90);\n  --color-brand-b-500: oklch(0.68 0.17 45.85);\n  --color-brand-b-600: oklch(0.63 0.19 39.71);\n  --color-primary: var(--theme-modes-color-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-color-primary-dark: var(--color-brand-a-500);\n  --brand-modes-color-primary-light: var(--color-brand-a-600);\n}\n\n/* Mode Override */\n@layer theme {\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-color-background-dark: var(--color-base-black);\n  --brand-modes-color-background-light: var(--color-base-white);\n  --brand-modes-color-primary-dark: var(--color-brand-b-500);\n  --brand-modes-color-primary-foreground-light: var(--color-base-white);\n  --brand-modes-color-primary-light: var(--color-brand-b-600);\n  }\n}\n\n/* Mode Override */\n@layer theme {\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-dark);\n  }\n}\n  ```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n    theme: {\n      extend: {\n        colors: {\n      'brand-a': {\n            '500': 'rgb(var(--colors-brand-a-500))',\n            '600': 'rgb(var(--colors-brand-a-600))',\n      },\n      'brand-b': {\n            '400': 'rgb(var(--colors-brand-b-400))',\n            '500': 'rgb(var(--colors-brand-b-500))',\n            '600': 'rgb(var(--colors-brand-b-600))',\n      },\n      primary: 'rgb(var(--colors-primary))',\n        }\n      },\n    },\n  };\n```\n    ```css\n  /* Default Mode */\n  :root {\n\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n  /* Default Mode */\n  :root {\n  /* Collection: Design Tokens */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Mode Override */\n.brand-b {\n  /* Collection: Brand Modes */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Mode Override */\n.dark {\n  /* Collection: Theme Modes */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\n现在，`colors/primary/DEFAULT` 变量在不同的明暗主题以及品牌主题下，都会呈现不一样的结果。\n\n了解如何在 Figma 中创建和管理多模式变量:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"多模式变量管理\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Le multi-modes permet à une variable d'avoir différentes valeurs dans différentes situations. Voici quelques modes courants :\n\n- Thèmes clair et sombre\n- Thèmes de marque\n- Points de rupture responsifs\n- Densité de mise en page\n\nVariables Xporter **prend en charge les variables multi-modes composées**. Par exemple, la variable `colors/primary/DEFAULT` (couleur primaire) peut être affectée à la fois par le thème clair/sombre et le thème de marque, ce qui donne le résultat suivant :\n\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'Variables CSS']}>\n  <Tabs.Tab>\n  ```css\n  /* Mode par défaut */\n@theme {\n  /* Collection : Jetons de design */\n  --color-brand-a-500: oklch(0.63 0.16 22.94);\n  --color-brand-a-600: oklch(0.54 0.17 24.90);\n  --color-brand-b-500: oklch(0.68 0.17 45.85);\n  --color-brand-b-600: oklch(0.63 0.19 39.71);\n  --color-primary: var(--theme-modes-color-primary);\n\n  /* Collection : Modes de thème */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-light);\n\n  /* Collection : Modes de marque */\n  --brand-modes-color-primary-dark: var(--color-brand-a-500);\n  --brand-modes-color-primary-light: var(--color-brand-a-600);\n}\n\n/* Remplacement de mode */\n@layer theme {\n.brand-b {\n  /* Collection : Modes de marque */\n  --brand-modes-color-background-dark: var(--color-base-black);\n  --brand-modes-color-background-light: var(--color-base-white);\n  --brand-modes-color-primary-dark: var(--color-brand-b-500);\n  --brand-modes-color-primary-foreground-light: var(--color-base-white);\n  --brand-modes-color-primary-light: var(--color-brand-b-600);\n  }\n}\n\n/* Remplacement de mode */\n@layer theme {\n.dark {\n  /* Collection : Modes de thème */\n  --theme-modes-color-primary: var(--brand-modes-color-primary-dark);\n  }\n}\n  ```\n  </Tabs.Tab>\n\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n    theme: {\n      extend: {\n        colors: {\n      'brand-a': {\n            '500': 'rgb(var(--colors-brand-a-500))',\n            '600': 'rgb(var(--colors-brand-a-600))',\n      },\n      'brand-b': {\n            '400': 'rgb(var(--colors-brand-b-400))',\n            '500': 'rgb(var(--colors-brand-b-500))',\n            '600': 'rgb(var(--colors-brand-b-600))',\n      },\n      primary: 'rgb(var(--colors-primary))',\n        }\n      },\n    },\n  };\n```\n    ```css\n  /* Mode par défaut */\n  :root {\n\n  /* Collection : Jetons de design */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection : Modes de thème */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection : Modes de marque */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Remplacement de mode */\n.brand-b {\n  /* Collection : Modes de marque */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Remplacement de mode */\n.dark {\n  /* Collection : Modes de thème */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n  /* Mode par défaut */\n  :root {\n  /* Collection : Jetons de design */\n  --colors-brand-a-500: 218 89 89;\n  --colors-brand-a-600: 192 57 57;\n  --colors-brand-b-500: 238 109 33;\n  --colors-brand-b-600: 229 85 23;\n  --colors-primary: var(--theme-modes-colors-primary);\n\n  /* Collection : Modes de thème */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-light);\n\n  /* Collection : Modes de marque */\n  --brand-modes-colors-primary-dark: var(--colors-brand-a-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-a-600);\n\n}\n\n/* Remplacement de mode */\n.brand-b {\n  /* Collection : Modes de marque */\n  --brand-modes-colors-primary-dark: var(--colors-brand-b-500);\n  --brand-modes-colors-primary-light: var(--colors-brand-b-600);\n}\n\n/* Remplacement de mode */\n.dark {\n  /* Collection : Modes de thème */\n  --theme-modes-colors-primary: var(--brand-modes-colors-primary-dark);\n}\n```\n  </Tabs.Tab>\n</Tabs>\n\nMaintenant, la variable `colors/primary/DEFAULT` aura des résultats différents selon les différents thèmes clair/sombre et thèmes de marque.\n\nDécouvrez comment créer et gérer des variables multi-modes dans Figma :\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"Gestion des variables multi-modes\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-5","source":"## 工作原理","processed":"## Comment ça fonctionne"}
{"targetLocale":"fr","key":"md-section-6","source":"Variables Xporter 会追溯所选的导出集合中所有引用的变量，直到找到变量的原始值。这意味着你可以跨集合引用变量，Variables Xporter 会完整的还原变量的引用链。","processed":"Variables Xporter retrace toutes les variables référencées dans la collection d'exportation sélectionnée jusqu'à ce qu'il trouve la valeur originale de la variable. Cela signifie que vous pouvez référencer des variables à travers différentes collections, et Variables Xporter reconstituera complètement la chaîne de référence des variables."}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout, Cards, Tabs } from 'nextra/components'\nimport { Type } from 'lucide-react'","processed":"import { Callout, Cards, Tabs } from 'nextra/components'\nimport { Type } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# 合并排版样式","processed":"# Merge typography styles"}
{"targetLocale":"en","key":"md-section-2","source":"合并排版样式是一个专门为 Tailwind CSS 设计的功能，它可以智能地将字体相关的变量组合成符合 Tailwind 约定的配置格式。","processed":"Merge typography styles is a feature specifically designed for Tailwind CSS that intelligently combines font-related variables into a configuration format that adheres to Tailwind conventions."}
{"targetLocale":"en","key":"md-section-3","source":"## 工作原理","processed":"## How it works"}
{"targetLocale":"en","key":"md-section-4","source":"当你在 Figma 中定义了字体相关的变量（如字体大小、行高等），Variables Xporter 会：\n\n1. 识别相关的变量\n2. 按照命名规则组合变量\n3. 生成 Tailwind CSS 配置","processed":"When you define font-related variables in Figma (such as font size, line height, etc.), Variables Xporter will:\n\n1. Identify relevant variables\n2. Combine variables according to naming rules\n3. Generate Tailwind CSS configuration"}
{"targetLocale":"en","key":"md-section-5","source":"### 示例转换","processed":"### Example conversion"}
{"targetLocale":"en","key":"md-section-6","source":"Figma 变量：\n- `font-size/heading-1/DEFAULT`\n- `font-size/heading-1/line-height`\n- `font-size/heading-1/font-weight`\n\n转换后的 Tailwind CSS 配置或 CSS 变量：\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-heading-1: 2.5rem;\n  --text-heading-1--line-height: 1.2;\n  --text-heading-1--font-weight: 600;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'heading-1': ['2.5rem', {\n        lineHeight: '1.2',\n        fontWeight: '600'\n      }]\n    }\n  }\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n:root {\n  --font-size-heading-1: 2.5rem;\n  --font-size-heading-1-line-height: 1.2;\n  --font-size-heading-1-font-weight: 600;\n}\n```\n  </Tabs.Tab>\n</Tabs>","processed":"Figma variables:\n- `font-size/heading-1/DEFAULT`\n- `font-size/heading-1/line-height`\n- `font-size/heading-1/font-weight`\n\nConverted Tailwind CSS configuration or CSS variables:\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-heading-1: 2.5rem;\n  --text-heading-1--line-height: 1.2;\n  --text-heading-1--font-weight: 600;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'heading-1': ['2.5rem', {\n        lineHeight: '1.2',\n        fontWeight: '600'\n      }]\n    }\n  }\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n:root {\n  --font-size-heading-1: 2.5rem;\n  --font-size-heading-1-line-height: 1.2;\n  --font-size-heading-1-font-weight: 600;\n}\n```\n  </Tabs.Tab>\n</Tabs>"}
{"targetLocale":"en","key":"md-section-7","source":"## 命名约定","processed":"## Naming conventions"}
{"targetLocale":"en","key":"md-section-8","source":"为了让 Variables Xporter 正确识别和合并变量，请遵循以下命名规则：\n\n1. **基础命名格式**\n\n`font-size/{variable}/{property}`\n\n\n2. **支持的属性**\n   - `font-size`\n   - `line-height`\n   - `font-weight`\n   - `letter-spacing`\n\n3. **示例命名**\n\n- `font-size/sm/DEFAULT`\n- `font-size/sm/line-height`\n- `font-size/sm/font-weight`\n- `font-size/sm/letter-spacing`\n\n\n详细了解在 Figma 中排版和字体变量的组织建议:\n\n  <Cards.Card\n    icon={<Type  />}\n    title=\"排版和字体变量的组织建议\"\n    href=\"/docs/organizing-your-variables/typography\"\n    className=\"mt-4\"\n  />","processed":"To ensure Variables Xporter correctly identifies and merges variables, please follow these naming rules:\n\n1. **Basic naming format**\n\n`font-size/{variable}/{property}`\n\n\n2. **Supported properties**\n   - `font-size`\n   - `line-height`\n   - `font-weight`\n   - `letter-spacing`\n\n3. **Example naming**\n\n- `font-size/sm/DEFAULT`\n- `font-size/sm/line-height`\n- `font-size/sm/font-weight`\n- `font-size/sm/letter-spacing`\n\n\nLearn more about organizing typography and font variables in Figma:\n\n  <Cards.Card\n    icon={<Type  />}\n    title=\"Suggestions for organizing typography and font variables\"\n    href=\"/docs/organizing-your-variables/typography\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout, Cards, Tabs } from 'nextra/components'\nimport { Type } from 'lucide-react'","processed":"import { Callout, Cards, Tabs } from 'nextra/components'\nimport { Type } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# 合并排版样式","processed":"# Fusion des styles typographiques"}
{"targetLocale":"fr","key":"md-section-2","source":"合并排版样式是一个专门为 Tailwind CSS 设计的功能，它可以智能地将字体相关的变量组合成符合 Tailwind 约定的配置格式。","processed":"La fusion des styles typographiques est une fonctionnalité spécialement conçue pour Tailwind CSS, qui combine intelligemment les variables liées aux polices en une configuration conforme aux conventions de Tailwind."}
{"targetLocale":"fr","key":"md-section-3","source":"## 工作原理","processed":"## Principe de fonctionnement"}
{"targetLocale":"fr","key":"md-section-4","source":"当你在 Figma 中定义了字体相关的变量（如字体大小、行高等），Variables Xporter 会：\n\n1. 识别相关的变量\n2. 按照命名规则组合变量\n3. 生成 Tailwind CSS 配置","processed":"Lorsque vous définissez des variables liées aux polices dans Figma (comme la taille de police, la hauteur de ligne, etc.), Variables Xporter va :\n\n1. Identifier les variables pertinentes\n2. Combiner les variables selon les règles de nommage\n3. Générer la configuration Tailwind CSS"}
{"targetLocale":"fr","key":"md-section-5","source":"### 示例转换","processed":"### Exemple de conversion"}
{"targetLocale":"fr","key":"md-section-6","source":"Figma 变量：\n- `font-size/heading-1/DEFAULT`\n- `font-size/heading-1/line-height`\n- `font-size/heading-1/font-weight`\n\n转换后的 Tailwind CSS 配置或 CSS 变量：\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'CSS Variables']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-heading-1: 2.5rem;\n  --text-heading-1--line-height: 1.2;\n  --text-heading-1--font-weight: 600;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'heading-1': ['2.5rem', {\n        lineHeight: '1.2',\n        fontWeight: '600'\n      }]\n    }\n  }\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n:root {\n  --font-size-heading-1: 2.5rem;\n  --font-size-heading-1-line-height: 1.2;\n  --font-size-heading-1-font-weight: 600;\n}\n```\n  </Tabs.Tab>\n</Tabs>","processed":"Variables Figma :\n- `font-size/heading-1/DEFAULT`\n- `font-size/heading-1/line-height`\n- `font-size/heading-1/font-weight`\n\nConfiguration Tailwind CSS ou variables CSS après conversion :\n<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3', 'Variables CSS']}>\n  <Tabs.Tab>\n  ```css\n@theme {\n  --text-heading-1: 2.5rem;\n  --text-heading-1--line-height: 1.2;\n  --text-heading-1--font-weight: 600;\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\nmodule.exports = {\n  theme: {\n    fontSize: {\n      'heading-1': ['2.5rem', {\n        lineHeight: '1.2',\n        fontWeight: '600'\n      }]\n    }\n  }\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```css\n:root {\n  --font-size-heading-1: 2.5rem;\n  --font-size-heading-1-line-height: 1.2;\n  --font-size-heading-1-font-weight: 600;\n}\n```\n  </Tabs.Tab>\n</Tabs>"}
{"targetLocale":"fr","key":"md-section-7","source":"## 命名约定","processed":"## Conventions de nommage"}
{"targetLocale":"fr","key":"md-section-8","source":"为了让 Variables Xporter 正确识别和合并变量，请遵循以下命名规则：\n\n1. **基础命名格式**\n\n`font-size/{variable}/{property}`\n\n\n2. **支持的属性**\n   - `font-size`\n   - `line-height`\n   - `font-weight`\n   - `letter-spacing`\n\n3. **示例命名**\n\n- `font-size/sm/DEFAULT`\n- `font-size/sm/line-height`\n- `font-size/sm/font-weight`\n- `font-size/sm/letter-spacing`\n\n\n详细了解在 Figma 中排版和字体变量的组织建议:\n\n  <Cards.Card\n    icon={<Type  />}\n    title=\"排版和字体变量的组织建议\"\n    href=\"/docs/organizing-your-variables/typography\"\n    className=\"mt-4\"\n  />","processed":"Pour que Variables Xporter identifie et fusionne correctement les variables, veuillez suivre ces règles de nommage :\n\n1. **Format de base du nommage**\n\n`font-size/{variable}/{property}`\n\n\n2. **Propriétés prises en charge**\n   - `font-size`\n   - `line-height`\n   - `font-weight`\n   - `letter-spacing`\n\n3. **Exemples de nommage**\n\n- `font-size/sm/DEFAULT`\n- `font-size/sm/line-height`\n- `font-size/sm/font-weight`\n- `font-size/sm/letter-spacing`\n\n\nPour en savoir plus sur les recommandations d'organisation des variables typographiques et de police dans Figma :\n\n  <Cards.Card\n    icon={<Type  />}\n    title=\"Recommandations pour l'organisation des variables typographiques et de police\"\n    href=\"/docs/organizing-your-variables/typography\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout, Tabs } from 'nextra/components'","processed":"import { Callout, Tabs } from 'nextra/components'"}
{"targetLocale":"en","key":"md-section-1","source":"# 忽略 Tailwind 调色板","processed":"# Ignore Tailwind palette"}
{"targetLocale":"en","key":"md-section-2","source":"当使用 Tailwind CSS 导出模式时，Variables Xporter 提供了一个实用的选项来忽略 Tailwind 默认的调色板，让你导出的配置文件更加简洁。","processed":"When using Tailwind CSS export mode, Variables Xporter provides a useful option to ignore Tailwind's default color palette, making your exported configuration file more concise."}
{"targetLocale":"en","key":"md-section-3","source":"## 为什么需要这个功能？","processed":"## Why do we need this feature?"}
{"targetLocale":"en","key":"md-section-4","source":"Tailwind CSS 默认包含了丰富的调色板：\n- Slate\n- Gray\n- Zinc\n- Neutral\n- Stone\n等...\n\n但是在 Figma 中，如果我们使用了 Tailwind 调色板，导出的配置文件中会包含很多不必要的颜色，这会让配置文件变的很臃肿，因为在开发环境里这些 Tailwind CSS 默认的调色板是内置的。","processed":"Tailwind CSS includes a rich default color palette:\n- Slate\n- Gray\n- Zinc\n- Neutral\n- Stone\netc...\n\nHowever, in Figma, if we use the Tailwind color palette, the exported configuration file will include many unnecessary colors, making the file bloated, because these Tailwind CSS default color palettes are built-in in the development environment."}
{"targetLocale":"en","key":"md-section-5","source":"## 如何使用","processed":"## How to use"}
{"targetLocale":"en","key":"md-section-6","source":"1. 在导出设置中勾选\"忽略 Tailwind CSS 默认色板\"选项\n2. Variables Xporter 将只导出你在 Figma 中定义的颜色变量\n3. 生成的配置文件中不会包含 Tailwind 默认颜色","processed":"1. Check the \"Ignore Tailwind CSS default color palette\" option in the export settings\n2. Variables Xporter will only export the color variables you defined in Figma\n3. The generated configuration file will not include Tailwind default colors"}
{"targetLocale":"en","key":"md-section-7","source":"### 示例","processed":"### Example"}
{"targetLocale":"en","key":"md-section-8","source":"<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3']}>\n  <Tabs.Tab>\n  ```css\n/* 启用忽略选项前 */\n@theme {\n  --color-red-50: oklch(0.971 0.013 17.38);\n  ...\n  --color-orange-50: oklch(0.98 0.016 73.684);\n  ...\n  --color-amber-50: oklch(0.987 0.022 95.277);\n  ...\n\n  /* 你的自定义颜色 */\n  --color-primary: var(--color-red-400);\n}\n\n/* 启用忽略选项后 */\n@theme {\n  /* 只包含你的自定义颜色 */\n  --color-primary: oklch(0.704 0.191 22.216);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n// 启用忽略选项前\nmodule.exports = {\n  theme: {\n    colors: {\n      slate: { /* ... */ },\n      gray: { /* ... */ },\n      zinc: { /* ... */ },\n      // 你的自定义颜色\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n\n// 启用忽略选项后\nmodule.exports = {\n  theme: {\n    colors: {\n      // 只包含你的自定义颜色\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n```\n  </Tabs.Tab>\n</Tabs>","processed":"<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3']}>\n  <Tabs.Tab>\n  ```css\n/* Before enabling the ignore option */\n@theme {\n  --color-red-50: oklch(0.971 0.013 17.38);\n  ...\n  --color-orange-50: oklch(0.98 0.016 73.684);\n  ...\n  --color-amber-50: oklch(0.987 0.022 95.277);\n  ...\n\n  /* Your custom colors */\n  --color-primary: var(--color-red-400);\n}\n\n/* After enabling the ignore option */\n@theme {\n  /* Only includes your custom colors */\n  --color-primary: oklch(0.704 0.191 22.216);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n// Before enabling the ignore option\nmodule.exports = {\n  theme: {\n    colors: {\n      slate: { /* ... */ },\n      gray: { /* ... */ },\n      zinc: { /* ... */ },\n      // Your custom colors\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n\n// After enabling the ignore option\nmodule.exports = {\n  theme: {\n    colors: {\n      // Only includes your custom colors\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n```\n  </Tabs.Tab>\n</Tabs>"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout, Tabs } from 'nextra/components'","processed":"import { Callout, Tabs } from 'nextra/components'"}
{"targetLocale":"fr","key":"md-section-1","source":"# 忽略 Tailwind 调色板","processed":"# Ignorer la palette de couleurs Tailwind"}
{"targetLocale":"fr","key":"md-section-2","source":"当使用 Tailwind CSS 导出模式时，Variables Xporter 提供了一个实用的选项来忽略 Tailwind 默认的调色板，让你导出的配置文件更加简洁。","processed":"Lors de l'utilisation du mode d'exportation Tailwind CSS, Variables Xporter offre une option pratique pour ignorer la palette de couleurs par défaut de Tailwind, rendant votre fichier de configuration exporté plus concis."}
{"targetLocale":"fr","key":"md-section-3","source":"## 为什么需要这个功能？","processed":"## Pourquoi cette fonctionnalité est-elle nécessaire ?"}
{"targetLocale":"fr","key":"md-section-4","source":"Tailwind CSS 默认包含了丰富的调色板：\n- Slate\n- Gray\n- Zinc\n- Neutral\n- Stone\n等...\n\n但是在 Figma 中，如果我们使用了 Tailwind 调色板，导出的配置文件中会包含很多不必要的颜色，这会让配置文件变的很臃肿，因为在开发环境里这些 Tailwind CSS 默认的调色板是内置的。","processed":"Tailwind CSS inclut par défaut une riche palette de couleurs :\n- Slate\n- Gray\n- Zinc\n- Neutral\n- Stone\netc...\n\nCependant, dans Figma, si nous utilisons la palette de couleurs Tailwind, le fichier de configuration exporté contiendra de nombreuses couleurs inutiles, ce qui rendra le fichier de configuration volumineux, car ces palettes de couleurs par défaut de Tailwind CSS sont intégrées dans l'environnement de développement."}
{"targetLocale":"fr","key":"md-section-5","source":"## 如何使用","processed":"## Comment l'utiliser"}
{"targetLocale":"fr","key":"md-section-6","source":"1. 在导出设置中勾选\"忽略 Tailwind CSS 默认色板\"选项\n2. Variables Xporter 将只导出你在 Figma 中定义的颜色变量\n3. 生成的配置文件中不会包含 Tailwind 默认颜色","processed":"1. Cochez l'option \"Ignorer la palette de couleurs par défaut de Tailwind CSS\" dans les paramètres d'exportation\n2. Variables Xporter n'exportera que les variables de couleur que vous avez définies dans Figma\n3. Le fichier de configuration généré ne contiendra pas les couleurs par défaut de Tailwind"}
{"targetLocale":"fr","key":"md-section-7","source":"### 示例","processed":"### Exemple"}
{"targetLocale":"fr","key":"md-section-8","source":"<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3']}>\n  <Tabs.Tab>\n  ```css\n/* 启用忽略选项前 */\n@theme {\n  --color-red-50: oklch(0.971 0.013 17.38);\n  ...\n  --color-orange-50: oklch(0.98 0.016 73.684);\n  ...\n  --color-amber-50: oklch(0.987 0.022 95.277);\n  ...\n\n  /* 你的自定义颜色 */\n  --color-primary: var(--color-red-400);\n}\n\n/* 启用忽略选项后 */\n@theme {\n  /* 只包含你的自定义颜色 */\n  --color-primary: oklch(0.704 0.191 22.216);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n// 启用忽略选项前\nmodule.exports = {\n  theme: {\n    colors: {\n      slate: { /* ... */ },\n      gray: { /* ... */ },\n      zinc: { /* ... */ },\n      // 你的自定义颜色\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n\n// 启用忽略选项后\nmodule.exports = {\n  theme: {\n    colors: {\n      // 只包含你的自定义颜色\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n```\n  </Tabs.Tab>\n</Tabs>","processed":"<Tabs items={['Tailwind CSS V4', 'Tailwind CSS V3']}>\n  <Tabs.Tab>\n  ```css\n/* Avant d'activer l'option d'ignorer */\n@theme {\n  --color-red-50: oklch(0.971 0.013 17.38);\n  ...\n  --color-orange-50: oklch(0.98 0.016 73.684);\n  ...\n  --color-amber-50: oklch(0.987 0.022 95.277);\n  ...\n\n  /* Vos couleurs personnalisées */\n  --color-primary: var(--color-red-400);\n}\n\n/* Après avoir activé l'option d'ignorer */\n@theme {\n  /* Ne contient que vos couleurs personnalisées */\n  --color-primary: oklch(0.704 0.191 22.216);\n}\n```\n  </Tabs.Tab>\n  <Tabs.Tab>\n  ```js\n// Avant d'activer l'option d'ignorer\nmodule.exports = {\n  theme: {\n    colors: {\n      slate: { /* ... */ },\n      gray: { /* ... */ },\n      zinc: { /* ... */ },\n      // Vos couleurs personnalisées\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n\n// Après avoir activé l'option d'ignorer\nmodule.exports = {\n  theme: {\n    colors: {\n      // Ne contient que vos couleurs personnalisées\n      primary: 'rgb(var(--colors-primary))',\n    }\n  }\n}\n```\n  </Tabs.Tab>\n</Tabs>"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout,Cards } from 'nextra/components'\nimport { Columns3 } from 'lucide-react'","processed":"import { Callout,Cards } from 'nextra/components'\nimport { Columns3 } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# CSS 媒体查询模式","processed":"# CSS media query modes"}
{"targetLocale":"en","key":"md-section-2","source":"CSS 媒体查询模式让你能够为不同的视口尺寸或设备特性定义变量值，实现响应式设计。","processed":"CSS media query modes allow you to define variable values for different viewport sizes or device characteristics, enabling responsive design."}
{"targetLocale":"en","key":"md-section-3","source":"## 工作原理","processed":"## How it works"}
{"targetLocale":"en","key":"md-section-4","source":"Variables Xporter 支持在变量模式名中使用标准的媒体查询语法：\n\n变量模式命名规则：\n**`{media-feature}:{value}`**\n\n例如：\n`min-width:768px`、`max-width:1024px`","processed":"Variables Xporter supports using standard media query syntax in variable mode names:\n\nVariable mode naming rule:\n**`{media-feature}:{value}`**\n\nFor example:\n`min-width:768px`, `max-width:1024px`"}
{"targetLocale":"en","key":"md-section-5","source":"### 支持的媒体特性","processed":"### Supported media features"}
{"targetLocale":"en","key":"md-section-6","source":"- `min-width`\n- `max-width`\n- `min-height`\n- `max-height`\n- `orientation`\n- `aspect-ratio`\n- `min-aspect-ratio`\n- `max-aspect-ratio`\n- `prefers-color-scheme`\n- `prefers-reduced-motion`\n- `display-mode`","processed":"- `min-width`\n- `max-width`\n- `min-height`\n- `max-height`\n- `orientation`\n- `aspect-ratio`\n- `min-aspect-ratio`\n- `max-aspect-ratio`\n- `prefers-color-scheme`\n- `prefers-reduced-motion`\n- `display-mode`"}
{"targetLocale":"en","key":"md-section-7","source":"## 使用示例","processed":"## Usage examples"}
{"targetLocale":"en","key":"md-section-8","source":"### 1. 响应式间距","processed":"### 1. Responsive spacing"}
{"targetLocale":"en","key":"md-section-9","source":"在 Figma 中设置不同断点的容器宽度：\n\n```                                          \n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ spacing/lg             │ spacing/10           │ spacing/16          │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```","processed":"Set container widths for different breakpoints in Figma:\n\n```                                          \n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ spacing/lg             │ spacing/10           │ spacing/16          │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```"}
{"targetLocale":"en","key":"md-section-10","source":"### 2. 响应式字体大小","processed":"### 2. Responsive font sizes"}
{"targetLocale":"en","key":"md-section-11","source":"为不同屏幕尺寸设置合适的字体大小：\n\n```\n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ font/hero/size         │ font/2xl/size        │ font/3xl/size       │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```\n\n了解如何在 Figma 中创建和管理多模式变量:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"多模式变量管理\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Set appropriate font sizes for different screen sizes:\n\n```\n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ font/hero/size         │ font/2xl/size        │ font/3xl/size       │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```\n\nLearn how to create and manage multi-mode variables in Figma:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"Multi-mode variable management\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout,Cards } from 'nextra/components'\nimport { Columns3 } from 'lucide-react'","processed":"import { Callout,Cards } from 'nextra/components'\nimport { Columns3 } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# CSS 媒体查询模式","processed":"# Modèles de requêtes média CSS"}
{"targetLocale":"fr","key":"md-section-2","source":"CSS 媒体查询模式让你能够为不同的视口尺寸或设备特性定义变量值，实现响应式设计。","processed":"Les modèles de requêtes média CSS vous permettent de définir des valeurs de variables pour différentes tailles de viewport ou caractéristiques d'appareils, permettant ainsi un design responsive."}
{"targetLocale":"fr","key":"md-section-3","source":"## 工作原理","processed":"## Comment ça fonctionne"}
{"targetLocale":"fr","key":"md-section-4","source":"Variables Xporter 支持在变量模式名中使用标准的媒体查询语法：\n\n变量模式命名规则：\n**`{media-feature}:{value}`**\n\n例如：\n`min-width:768px`、`max-width:1024px`","processed":"Variables Xporter prend en charge l'utilisation de la syntaxe standard des requêtes média dans les noms de modèles de variables :\n\nRègle de nommage des modèles de variables :\n**`{media-feature}:{value}`**\n\nPar exemple :\n`min-width:768px`, `max-width:1024px`"}
{"targetLocale":"fr","key":"md-section-5","source":"### 支持的媒体特性","processed":"### Caractéristiques média prises en charge"}
{"targetLocale":"fr","key":"md-section-6","source":"- `min-width`\n- `max-width`\n- `min-height`\n- `max-height`\n- `orientation`\n- `aspect-ratio`\n- `min-aspect-ratio`\n- `max-aspect-ratio`\n- `prefers-color-scheme`\n- `prefers-reduced-motion`\n- `display-mode`","processed":"- `min-width`\n- `max-width`\n- `min-height`\n- `max-height`\n- `orientation`\n- `aspect-ratio`\n- `min-aspect-ratio`\n- `max-aspect-ratio`\n- `prefers-color-scheme`\n- `prefers-reduced-motion`\n- `display-mode`"}
{"targetLocale":"fr","key":"md-section-7","source":"## 使用示例","processed":"## Exemples d'utilisation"}
{"targetLocale":"fr","key":"md-section-8","source":"### 1. 响应式间距","processed":"### 1. Espacement responsive"}
{"targetLocale":"fr","key":"md-section-9","source":"在 Figma 中设置不同断点的容器宽度：\n\n```                                          \n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ spacing/lg             │ spacing/10           │ spacing/16          │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```","processed":"Définissez la largeur du conteneur pour différents points de rupture dans Figma :\n\n```                                          \n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Modes d'appareil       │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ spacing/lg             │ spacing/10           │ spacing/16          │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```"}
{"targetLocale":"fr","key":"md-section-10","source":"### 2. 响应式字体大小","processed":"### 2. Taille de police responsive"}
{"targetLocale":"fr","key":"md-section-11","source":"为不同屏幕尺寸设置合适的字体大小：\n\n```\n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Device Modes           │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ font/hero/size         │ font/2xl/size        │ font/3xl/size       │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```\n\n了解如何在 Figma 中创建和管理多模式变量:\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"多模式变量管理\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Définissez des tailles de police appropriées pour différentes tailles d'écran :\n\n```\n ┌────────────────────────┬──────────────────────┬─────────────────────┐\n │                        │                      │                     │\n │ Modes d'appareil       │        default       │    min-width:1024   │\n │                        │                      │                     │\n ├────────────────────────┼──────────────────────┼─────────────────────┤\n │                        │                      │                     │\n │ font/hero/size         │ font/2xl/size        │ font/3xl/size       │\n │                        │                      │                     │\n │ ...                    │ ...                  │ ...                 │\n │                        │                      │                     │\n └────────────────────────┴──────────────────────┴─────────────────────┘\n```\n\nApprenez comment créer et gérer des variables multi-modes dans Figma :\n\n  <Cards.Card\n    icon={<Columns3  />}\n    title=\"Gestion des variables multi-modes\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# Tailwind CSS V4","processed":"# Tailwind CSS V4"}
{"targetLocale":"en","key":"md-section-2","source":"Tailwind CSS 迎来了 V4 版本，它引入了许多新的功能，并且更快。选择 Tailwind CSS V4 导出方式时，Variables Xporter 会生成一个文件：\n\n- `app.css` - 包含所有的 Tailwind CSS 配置和 CSS 变量","processed":"Tailwind CSS has released version 4, introducing many new features and improved performance. When choosing the Tailwind CSS V4 export method, Variables Xporter will generate a file:\n\n- `app.css` - contains all Tailwind CSS configurations and CSS variables"}
{"targetLocale":"en","key":"md-section-3","source":"## 特性和优化","processed":"## Features and optimizations"}
{"targetLocale":"en","key":"md-section-4","source":"### 1. 颜色值优化","processed":"### 1. Color value optimization"}
{"targetLocale":"en","key":"md-section-5","source":"自动将颜色值转换为 oklch 格式，支持不透明度修饰符：\n\n```css\n@theme {\n  --color-primary: oklch(0.94 0.024 17.6);\n}\n```\n\n使用示例：\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% 不透明度 -->\n  Hello World\n</div>\n```","processed":"Automatically converts color values to oklch format, supporting opacity modifiers:\n\n```css\n@theme {\n  --color-primary: oklch(0.94 0.024 17.6);\n}\n```\n\nUsage example:\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% opacity -->\n  Hello World\n</div>\n```"}
{"targetLocale":"en","key":"md-section-6","source":"### 2. 合并排版样式","processed":"### 2. Merged typography styles"}
{"targetLocale":"en","key":"md-section-7","source":"自动合并相关的排版样式变量，符合 Tailwind CSS V4的约定：\n\n```css\n@theme {\n--text-lg: 1.125rem;\n--text-lg--line-height: 1.75rem;\n}\n```","processed":"Automatically merges related typography style variables, conforming to Tailwind CSS V4 conventions:\n\n```css\n@theme {\n--text-lg: 1.125rem;\n--text-lg--line-height: 1.75rem;\n}\n```"}
{"targetLocale":"en","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Multi-mode support"}
{"targetLocale":"en","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n@theme {\n  --color-primary: var(--color-red-500);\n}\n\n@layer theme {\n  .dark {\n    --color-primary: var(--color-red-400);\n  }\n}\n```\n\n了解多模式支持的更多细节：\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"With the help of **variable tracing** and **single source of truth principle**, Variables Xporter can achieve complex multi-mode variable exports.\n\n```css\n@theme {\n  --color-primary: var(--color-red-500);\n}\n\n@layer theme {\n  .dark {\n    --color-primary: var(--color-red-400);\n  }\n}\n```\n\nLearn more details about multi-mode support:\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"Multi-mode support\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-10","source":"### 4. 强大的兼容性","processed":"### 4. Powerful compatibility"}
{"targetLocale":"en","key":"md-section-11","source":"Variables Xporter 支持 Tailwind CSS V3 和 Tailwind CSS V4 两种导出方式，并且一套 Figma 变量可以在两种导出方式中无缝切换，而无需做任何更改。Variables Xporter 在内部会根据不同版本的命名规范自动调整导出。","processed":"Variables Xporter supports both Tailwind CSS V3 and Tailwind CSS V4 export methods, and a set of Figma variables can be seamlessly switched between the two export methods without any changes. Variables Xporter automatically adjusts the export internally according to the naming conventions of different versions."}
{"targetLocale":"en","key":"md-section-12","source":"---","processed":"---"}
{"targetLocale":"en","key":"md-section-13","source":"## 变量组织建议","processed":"## Variable organization recommendations"}
{"targetLocale":"en","key":"md-section-14","source":"要保证 Figma 变量的完美导出，变量的命名需要遵循一定的规则，这是因为需要与 Tailwind CSS 的配置键对应。并且，良好的变量组织方式可以带来诸多好处：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作","processed":"To ensure perfect export of Figma variables, variable naming needs to follow certain rules, as it needs to correspond to Tailwind CSS configuration keys. Moreover, a good variable organization method can bring many benefits:\n\n- Improve variable maintainability\n- Maintain design system consistency\n- Facilitate team collaboration"}
{"targetLocale":"en","key":"md-section-15","source":"### 基础原则","processed":"### Basic principles"}
{"targetLocale":"en","key":"md-section-16","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"You can first understand the basic principles of variable organization, which can help you make better decisions in variable naming, grouping, and hierarchy.\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"Basic principles\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-17","source":"### 变量类型","processed":"### Variable types"}
{"targetLocale":"en","key":"md-section-18","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Then, you can further organize your variables according to different variable types.\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Color system\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Typography system\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Spacing and sizing system\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Other tokens\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"en","key":"fm-attr-title","source":"Tailwind CSS V4","processed":"Tailwind CSS V4"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# Tailwind CSS V4","processed":"# Tailwind CSS V4"}
{"targetLocale":"fr","key":"md-section-2","source":"Tailwind CSS 迎来了 V4 版本，它引入了许多新的功能，并且更快。选择 Tailwind CSS V4 导出方式时，Variables Xporter 会生成一个文件：\n\n- `app.css` - 包含所有的 Tailwind CSS 配置和 CSS 变量","processed":"Tailwind CSS a lancé sa version V4, qui introduit de nombreuses nouvelles fonctionnalités et est plus rapide. Lors de l'exportation avec Tailwind CSS V4, Variables Xporter génère un fichier :\n\n- `app.css` - contenant toute la configuration Tailwind CSS et les variables CSS"}
{"targetLocale":"fr","key":"md-section-3","source":"## 特性和优化","processed":"## Caractéristiques et optimisations"}
{"targetLocale":"fr","key":"md-section-4","source":"### 1. 颜色值优化","processed":"### 1. Optimisation des valeurs de couleur"}
{"targetLocale":"fr","key":"md-section-5","source":"自动将颜色值转换为 oklch 格式，支持不透明度修饰符：\n\n```css\n@theme {\n  --color-primary: oklch(0.94 0.024 17.6);\n}\n```\n\n使用示例：\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% 不透明度 -->\n  Hello World\n</div>\n```","processed":"Conversion automatique des valeurs de couleur au format oklch, avec prise en charge des modificateurs d'opacité :\n\n```css\n@theme {\n  --color-primary: oklch(0.94 0.024 17.6);\n}\n```\n\nExemple d'utilisation :\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% d'opacité -->\n  Bonjour le monde\n</div>\n```"}
{"targetLocale":"fr","key":"md-section-6","source":"### 2. 合并排版样式","processed":"### 2. Fusion des styles typographiques"}
{"targetLocale":"fr","key":"md-section-7","source":"自动合并相关的排版样式变量，符合 Tailwind CSS V4的约定：\n\n```css\n@theme {\n--text-lg: 1.125rem;\n--text-lg--line-height: 1.75rem;\n}\n```","processed":"Fusion automatique des variables de style typographique associées, conformément aux conventions de Tailwind CSS V4 :\n\n```css\n@theme {\n--text-lg: 1.125rem;\n--text-lg--line-height: 1.75rem;\n}\n```"}
{"targetLocale":"fr","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Prise en charge multi-mode"}
{"targetLocale":"fr","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n@theme {\n  --color-primary: var(--color-red-500);\n}\n\n@layer theme {\n  .dark {\n    --color-primary: var(--color-red-400);\n  }\n}\n```\n\n了解多模式支持的更多细节：\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Grâce au **traçage des variables** et au **principe de point d'entrée unique**, Variables Xporter peut réaliser une exportation complexe de variables multi-modes.\n\n```css\n@theme {\n  --color-primary: var(--color-red-500);\n}\n\n@layer theme {\n  .dark {\n    --color-primary: var(--color-red-400);\n  }\n}\n```\n\nPour en savoir plus sur la prise en charge multi-mode :\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"Prise en charge multi-mode\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-10","source":"### 4. 强大的兼容性","processed":"### 4. Forte compatibilité"}
{"targetLocale":"fr","key":"md-section-11","source":"Variables Xporter 支持 Tailwind CSS V3 和 Tailwind CSS V4 两种导出方式，并且一套 Figma 变量可以在两种导出方式中无缝切换，而无需做任何更改。Variables Xporter 在内部会根据不同版本的命名规范自动调整导出。","processed":"Variables Xporter prend en charge les modes d'exportation Tailwind CSS V3 et Tailwind CSS V4, et un ensemble de variables Figma peut être basculé sans problème entre les deux modes d'exportation sans nécessiter de modifications. Variables Xporter ajuste automatiquement l'exportation en interne selon les conventions de nommage des différentes versions."}
{"targetLocale":"fr","key":"md-section-12","source":"---","processed":"---"}
{"targetLocale":"fr","key":"md-section-13","source":"## 变量组织建议","processed":"## Recommandations pour l'organisation des variables"}
{"targetLocale":"fr","key":"md-section-14","source":"要保证 Figma 变量的完美导出，变量的命名需要遵循一定的规则，这是因为需要与 Tailwind CSS 的配置键对应。并且，良好的变量组织方式可以带来诸多好处：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作","processed":"Pour garantir une exportation parfaite des variables Figma, le nommage des variables doit suivre certaines règles, car elles doivent correspondre aux clés de configuration de Tailwind CSS. De plus, une bonne organisation des variables offre de nombreux avantages :\n\n- Améliore la maintenabilité des variables\n- Maintient la cohérence du système de design\n- Facilite la collaboration en équipe"}
{"targetLocale":"fr","key":"md-section-15","source":"### 基础原则","processed":"### Principes de base"}
{"targetLocale":"fr","key":"md-section-16","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"Vous pouvez d'abord vous familiariser avec les principes de base de l'organisation des variables, qui vous aideront à prendre de meilleures décisions en matière de nommage, de regroupement et de hiérarchie des variables.\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"Principes de base\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-17","source":"### 变量类型","processed":"### Types de variables"}
{"targetLocale":"fr","key":"md-section-18","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Ensuite, vous pouvez organiser davantage vos variables en fonction des différents types de variables.\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Système de couleurs\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Système typographique\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Système d'espacement et de dimensions\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Autres jetons\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"fr","key":"fm-attr-title","source":"Tailwind CSS V4","processed":"Tailwind CSS V4"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# Tailwind CSS V3","processed":"# Tailwind CSS V3"}
{"targetLocale":"en","key":"md-section-2","source":"选择 Tailwind CSS 导出方式时，Variables Xporter 会生成两个文件：\n\n- `tailwind.config.js` - Tailwind CSS 的配置文件\n- `global.css` - 包含所有 CSS 变量定义","processed":"When choosing the Tailwind CSS export method, Variables Xporter generates two files:\n\n- `tailwind.config.js` - The configuration file for Tailwind CSS\n- `global.css` - Contains all CSS variable definitions"}
{"targetLocale":"en","key":"md-section-3","source":"## 特性和优化","processed":"## Features and optimizations"}
{"targetLocale":"en","key":"md-section-4","source":"### 1. 颜色值优化","processed":"### 1. Color value optimization"}
{"targetLocale":"en","key":"md-section-5","source":"自动将颜色值转换为 RGB 通道格式，支持 Tailwind 的不透明度修饰符：\n\n```js\n// tailwind.config.js\ncolors: {\n  primary: 'rgb(var(--colors-primary-default))'\n}\n\n// global.css\n:root {\n  --colors-primary-default: 192 57 57;  /* RGB 通道格式 */\n}\n```\n\n使用示例：\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% 不透明度 -->\n  Hello World\n</div>\n```","processed":"Automatically converts color values to RGB channel format, supporting Tailwind's opacity modifiers:\n\n```js\n// tailwind.config.js\ncolors: {\n  primary: 'rgb(var(--colors-primary-default))'\n}\n\n// global.css\n:root {\n  --colors-primary-default: 192 57 57;  /* RGB channel format */\n}\n```\n\nUsage example:\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% opacity -->\n  Hello World\n</div>\n```"}
{"targetLocale":"en","key":"md-section-6","source":"### 2. 字体变量合并","processed":"### 2. Font variable merging"}
{"targetLocale":"en","key":"md-section-7","source":"自动合并相关的字体变量，符合 Tailwind 的约定：\n\n```js\nfontSize: {\n  'heading-1': ['2.5rem', { lineHeight: '1.2' }]\n}\n```","processed":"Automatically merges related font variables, conforming to Tailwind's conventions:\n\n```js\nfontSize: {\n  'heading-1': ['2.5rem', { lineHeight: '1.2' }]\n}\n```"}
{"targetLocale":"en","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Multi-mode support"}
{"targetLocale":"en","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n了解多模式支持的更多细节：\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"With the help of **variable tracing** and **single source of truth principle**, Variables Xporter can achieve complex multi-mode variable export.\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\nLearn more details about multi-mode support:\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"Multi-mode support\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-10","source":"### 4. 强大的兼容性","processed":"### 4. Powerful compatibility"}
{"targetLocale":"en","key":"md-section-11","source":"Variables Xporter 支持 Tailwind CSS V3 和 Tailwind CSS V4 的导出方式，并且一套 Figma 变量可以在两种导出方式中无缝切换，而无需做任何更改。Variables Xporter 在内部会根据不同版本的命名规范自动调整导出。","processed":"Variables Xporter supports export methods for both Tailwind CSS V3 and Tailwind CSS V4. A single set of Figma variables can be seamlessly switched between these two export methods without any modifications. Variables Xporter automatically adjusts the export internally based on the naming conventions of different versions."}
{"targetLocale":"en","key":"md-section-12","source":"---","processed":"---"}
{"targetLocale":"en","key":"md-section-13","source":"## 变量组织建议","processed":"## Variable organization recommendations"}
{"targetLocale":"en","key":"md-section-14","source":"要保证 Figma 变量的完美导出，变量的命名需要遵循一定的规则，这是因为需要与 Tailwind CSS 的配置键对应。并且，良好的变量组织方式可以带来诸多好处：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作","processed":"To ensure perfect export of Figma variables, variable naming needs to follow certain rules. This is because they need to correspond to Tailwind CSS configuration keys. Moreover, a good variable organization approach can bring many benefits:\n\n- Improves variable maintainability\n- Maintains consistency in the design system\n- Facilitates team collaboration"}
{"targetLocale":"en","key":"md-section-15","source":"### 基础原则","processed":"### Basic principles"}
{"targetLocale":"en","key":"md-section-16","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"You can first understand the basic principles of variable organization, which can help you make better decisions in terms of variable naming, grouping, and hierarchy.\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"Basic principles\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-17","source":"### 变量类型","processed":"### Variable types"}
{"targetLocale":"en","key":"md-section-18","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Then, you can further organize your variables based on different variable types.\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Color system\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Typography system\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Spacing and sizing system\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Other tokens\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"en","key":"fm-attr-title","source":"Tailwind CSS V3","processed":"Tailwind CSS V3"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck, Box, Ruler } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# Tailwind CSS V3","processed":"# Tailwind CSS V3"}
{"targetLocale":"fr","key":"md-section-2","source":"选择 Tailwind CSS 导出方式时，Variables Xporter 会生成两个文件：\n\n- `tailwind.config.js` - Tailwind CSS 的配置文件\n- `global.css` - 包含所有 CSS 变量定义","processed":"Lors de l'exportation avec Tailwind CSS, Variables Xporter génère deux fichiers :\n\n- `tailwind.config.js` - Le fichier de configuration de Tailwind CSS\n- `global.css` - Contenant toutes les définitions de variables CSS"}
{"targetLocale":"fr","key":"md-section-3","source":"## 特性和优化","processed":"## Caractéristiques et optimisations"}
{"targetLocale":"fr","key":"md-section-4","source":"### 1. 颜色值优化","processed":"### 1. Optimisation des valeurs de couleur"}
{"targetLocale":"fr","key":"md-section-5","source":"自动将颜色值转换为 RGB 通道格式，支持 Tailwind 的不透明度修饰符：\n\n```js\n// tailwind.config.js\ncolors: {\n  primary: 'rgb(var(--colors-primary-default))'\n}\n\n// global.css\n:root {\n  --colors-primary-default: 192 57 57;  /* RGB 通道格式 */\n}\n```\n\n使用示例：\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% 不透明度 -->\n  Hello World\n</div>\n```","processed":"Conversion automatique des valeurs de couleur au format de canaux RGB, prenant en charge les modificateurs d'opacité de Tailwind :\n\n```js\n// tailwind.config.js\ncolors: {\n  primary: 'rgb(var(--colors-primary-default))'\n}\n\n// global.css\n:root {\n  --colors-primary-default: 192 57 57;  /* Format de canaux RGB */\n}\n```\n\nExemple d'utilisation :\n\n```html\n<div class=\"text-primary/80\">\n  <!-- 80% d'opacité -->\n  Bonjour le monde\n</div>\n```"}
{"targetLocale":"fr","key":"md-section-6","source":"### 2. 字体变量合并","processed":"### 2. Fusion des variables de police"}
{"targetLocale":"fr","key":"md-section-7","source":"自动合并相关的字体变量，符合 Tailwind 的约定：\n\n```js\nfontSize: {\n  'heading-1': ['2.5rem', { lineHeight: '1.2' }]\n}\n```","processed":"Fusion automatique des variables de police associées, conformément aux conventions de Tailwind :\n\n```js\nfontSize: {\n  'heading-1': ['2.5rem', { lineHeight: '1.2' }]\n}\n```"}
{"targetLocale":"fr","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Prise en charge multi-mode"}
{"targetLocale":"fr","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n了解多模式支持的更多细节：\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Grâce au **traçage des variables** et au **principe de point d'entrée unique**, Variables Xporter peut réaliser une exportation complexe de variables multi-modes.\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\nPour en savoir plus sur la prise en charge multi-mode :\n\n  <Cards.Card\n    icon={<Columns3/>}\n    title=\"Prise en charge multi-mode\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-10","source":"### 4. 强大的兼容性","processed":"### 4. Compatibilité puissante"}
{"targetLocale":"fr","key":"md-section-11","source":"Variables Xporter 支持 Tailwind CSS V3 和 Tailwind CSS V4 的导出方式，并且一套 Figma 变量可以在两种导出方式中无缝切换，而无需做任何更改。Variables Xporter 在内部会根据不同版本的命名规范自动调整导出。","processed":"Variables Xporter prend en charge les méthodes d'exportation de Tailwind CSS V3 et Tailwind CSS V4, et un ensemble de variables Figma peut être basculé sans problème entre les deux méthodes d'exportation sans nécessiter de modifications. Variables Xporter ajuste automatiquement l'exportation en interne selon les conventions de nommage des différentes versions."}
{"targetLocale":"fr","key":"md-section-12","source":"---","processed":"---"}
{"targetLocale":"fr","key":"md-section-13","source":"## 变量组织建议","processed":"## Recommandations pour l'organisation des variables"}
{"targetLocale":"fr","key":"md-section-14","source":"要保证 Figma 变量的完美导出，变量的命名需要遵循一定的规则，这是因为需要与 Tailwind CSS 的配置键对应。并且，良好的变量组织方式可以带来诸多好处：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作","processed":"Pour garantir une exportation parfaite des variables Figma, la dénomination des variables doit suivre certaines règles, car elles doivent correspondre aux clés de configuration de Tailwind CSS. De plus, une bonne organisation des variables offre de nombreux avantages :\n\n- Améliore la maintenabilité des variables\n- Maintient la cohérence du système de design\n- Facilite la collaboration en équipe"}
{"targetLocale":"fr","key":"md-section-15","source":"### 基础原则","processed":"### Principes de base"}
{"targetLocale":"fr","key":"md-section-16","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"Vous pouvez d'abord vous familiariser avec les principes de base de l'organisation des variables, qui vous aideront à prendre de meilleures décisions en matière de nommage, de regroupement et de hiérarchie des variables.\n  <Cards.Card\n    icon={<BookOpenCheck />}\n    title=\"Principes de base\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-17","source":"### 变量类型","processed":"### Types de variables"}
{"targetLocale":"fr","key":"md-section-18","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Ensuite, vous pouvez organiser davantage vos variables en fonction des différents types de variables.\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Système de couleurs\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Système typographique\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Système d'espacement et de dimensions\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Autres jetons\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"fr","key":"fm-attr-title","source":"Tailwind CSS V3","processed":"Tailwind CSS V3"}
{"targetLocale":"en","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck,Box,Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck,Box,Ruler } from 'lucide-react'"}
{"targetLocale":"en","key":"md-section-1","source":"# CSS Variables","processed":"# CSS Variables"}
{"targetLocale":"en","key":"md-section-2","source":"选择 CSS Variables 导出方式时，Variables Xporter 会生成一个包含所有 CSS 变量定义的 CSS 文件。这种方式更加简单和灵活，适合不使用 Tailwind CSS 的项目。","processed":"When choosing the CSS Variables export method, Variables Xporter will generate a CSS file containing all CSS variable definitions. This approach is simpler and more flexible, suitable for projects not using Tailwind CSS."}
{"targetLocale":"en","key":"md-section-3","source":"## 特点","processed":"## Features"}
{"targetLocale":"en","key":"md-section-4","source":"### 1. 简单直观","processed":"### 1. Simple and intuitive"}
{"targetLocale":"en","key":"md-section-5","source":"直接输出标准的 CSS 自定义属性：\n\n```css\n:root {\n  --colors-primary: #c03939;\n  --colors-primary-foreground: #ffffff;\n  --font-size-heading-1: 2.5rem;\n  --line-height-heading-1: 1.2;\n}\n```","processed":"Directly outputs standard CSS custom properties:\n\n```css\n:root {\n  --colors-primary: #c03939;\n  --colors-primary-foreground: #ffffff;\n  --font-size-heading-1: 2.5rem;\n  --line-height-heading-1: 1.2;\n}\n```"}
{"targetLocale":"en","key":"md-section-6","source":"### 2. 灵活的使用方式","processed":"### 2. Flexible usage"}
{"targetLocale":"en","key":"md-section-7","source":"可以在任何 CSS 规则中使用这些变量：\n\n```css\n.button {\n  background-color: var(--colors-primary);\n  color: var(--colors-primary-foreground);\n  font-size: var(--font-size-heading-1);\n  line-height: var(--line-height-heading-1);\n}\n```","processed":"These variables can be used in any CSS rule:\n\n```css\n.button {\n  background-color: var(--colors-primary);\n  color: var(--colors-primary-foreground);\n  font-size: var(--font-size-heading-1);\n  line-height: var(--line-height-heading-1);\n}\n```"}
{"targetLocale":"en","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Multi-mode support"}
{"targetLocale":"en","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n\n\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"With the help of **variable tracing** and **single source of truth principle**, Variables Xporter can achieve complex multi-mode variable exports.\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n\n\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode support\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-10","source":"## 变量组织建议","processed":"## Variable organization recommendations"}
{"targetLocale":"en","key":"md-section-11","source":"相较于 [Tailwind CSS](/docs/export-modes/tailwind)，CSS Variables 导出方式对变量组织的要求较低，但是任然建议你遵循良好的组织原则，这样可以：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作\n- 为将来可能的框架迁移做准备","processed":"Compared to [Tailwind CSS](/docs/export-modes/tailwind), the CSS Variables export method has lower requirements for variable organization. However, it's still recommended that you follow good organizational principles, which can:\n\n- Improve variable maintainability\n- Maintain design system consistency\n- Facilitate team collaboration\n- Prepare for potential future framework migrations"}
{"targetLocale":"en","key":"md-section-12","source":"### 基础原则","processed":"### Basic principles"}
{"targetLocale":"en","key":"md-section-13","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n\n\n  <Cards.Card\n    icon={<BookOpenCheck  />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"You can start by understanding the basic principles of variable organization, which can help you make better decisions in naming, grouping, and hierarchical structuring of variables.\n\n\n  <Cards.Card\n    icon={<BookOpenCheck  />}\n    title=\"Basic principles\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"en","key":"md-section-14","source":"### 变量类型","processed":"### Variable types"}
{"targetLocale":"en","key":"md-section-15","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Then, you can further organize your variables based on different variable types.\n\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Color system\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Typography system\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Spacing and sizing system\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Other tokens\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"en","key":"fm-attr-title","source":"CSS Variables","processed":"CSS Variables"}
{"targetLocale":"fr","key":"md-section-0","source":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck,Box,Ruler } from 'lucide-react'","processed":"import { Callout } from 'nextra/components'\nimport { Cards } from 'nextra/components'\nimport { Zap, RefreshCw, Palette, Type, Columns3, BookOpenCheck,Box,Ruler } from 'lucide-react'"}
{"targetLocale":"fr","key":"md-section-1","source":"# CSS Variables","processed":"# Variables CSS"}
{"targetLocale":"fr","key":"md-section-2","source":"选择 CSS Variables 导出方式时，Variables Xporter 会生成一个包含所有 CSS 变量定义的 CSS 文件。这种方式更加简单和灵活，适合不使用 Tailwind CSS 的项目。","processed":"Lorsque vous choisissez le mode d'exportation des variables CSS, Variables Xporter génère un fichier CSS contenant toutes les définitions de variables CSS. Cette méthode est plus simple et flexible, adaptée aux projets qui n'utilisent pas Tailwind CSS."}
{"targetLocale":"fr","key":"md-section-3","source":"## 特点","processed":"## Caractéristiques"}
{"targetLocale":"fr","key":"md-section-4","source":"### 1. 简单直观","processed":"### 1. Simple et intuitif"}
{"targetLocale":"fr","key":"md-section-5","source":"直接输出标准的 CSS 自定义属性：\n\n```css\n:root {\n  --colors-primary: #c03939;\n  --colors-primary-foreground: #ffffff;\n  --font-size-heading-1: 2.5rem;\n  --line-height-heading-1: 1.2;\n}\n```","processed":"Sortie directe des propriétés personnalisées CSS standard :\n\n```css\n:root {\n  --colors-primary: #c03939;\n  --colors-primary-foreground: #ffffff;\n  --font-size-heading-1: 2.5rem;\n  --line-height-heading-1: 1.2;\n}\n```"}
{"targetLocale":"fr","key":"md-section-6","source":"### 2. 灵活的使用方式","processed":"### 2. Méthode d'utilisation flexible"}
{"targetLocale":"fr","key":"md-section-7","source":"可以在任何 CSS 规则中使用这些变量：\n\n```css\n.button {\n  background-color: var(--colors-primary);\n  color: var(--colors-primary-foreground);\n  font-size: var(--font-size-heading-1);\n  line-height: var(--line-height-heading-1);\n}\n```","processed":"Ces variables peuvent être utilisées dans n'importe quelle règle CSS :\n\n```css\n.button {\n  background-color: var(--colors-primary);\n  color: var(--colors-primary-foreground);\n  font-size: var(--font-size-heading-1);\n  line-height: var(--line-height-heading-1);\n}\n```"}
{"targetLocale":"fr","key":"md-section-8","source":"### 3. 多模式支持","processed":"### 3. Prise en charge multi-mode"}
{"targetLocale":"fr","key":"md-section-9","source":"借助**变量追溯**和**单一出口原则**, Variables Xporter 能够实现复杂的多模式变量导出。\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n\n\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式支持\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />","processed":"Grâce au **traçage des variables** et au **principe de point de sortie unique**, Variables Xporter peut réaliser une exportation complexe de variables multi-modes.\n\n```css\n:root {\n  --colors-primary: var(--colors-primary-light);\n}\n\n.dark {\n  --colors-primary: var(--colors-primary-dark);\n}\n```\n\n\n\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Prise en charge multi-mode\"\n    href=\"/docs/features/multi-mode\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-10","source":"## 变量组织建议","processed":"## Suggestions d'organisation des variables"}
{"targetLocale":"fr","key":"md-section-11","source":"相较于 [Tailwind CSS](/docs/export-modes/tailwind)，CSS Variables 导出方式对变量组织的要求较低，但是任然建议你遵循良好的组织原则，这样可以：\n\n- 提高变量的可维护性\n- 保持设计系统的一致性\n- 方便团队协作\n- 为将来可能的框架迁移做准备","processed":"Par rapport à [Tailwind CSS](/docs/export-modes/tailwind), le mode d'exportation des variables CSS a des exigences moindres en matière d'organisation des variables, mais il est toujours recommandé de suivre de bons principes d'organisation, ce qui permet de :\n\n- Améliorer la maintenabilité des variables\n- Maintenir la cohérence du système de design\n- Faciliter la collaboration en équipe\n- Se préparer à une éventuelle migration de framework"}
{"targetLocale":"fr","key":"md-section-12","source":"### 基础原则","processed":"### Principes de base"}
{"targetLocale":"fr","key":"md-section-13","source":"你可以先了解变量组织的基础原则，它能帮助你在变量的命名、分组、层级方面做出更好的决策。\n\n\n  <Cards.Card\n    icon={<BookOpenCheck  />}\n    title=\"基本原则\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />","processed":"Vous pouvez d'abord vous familiariser avec les principes de base de l'organisation des variables, ce qui vous aidera à prendre de meilleures décisions en termes de nommage, de regroupement et de hiérarchie des variables.\n\n\n  <Cards.Card\n    icon={<BookOpenCheck  />}\n    title=\"Principes de base\"\n    href=\"/docs/organizing-your-variables/principles\"\n    className=\"mt-4\"\n  />"}
{"targetLocale":"fr","key":"md-section-14","source":"### 变量类型","processed":"### Types de variables"}
{"targetLocale":"fr","key":"md-section-15","source":"然后，你就可以根据不同的变量类型，进一步组织你的变量。\n\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"颜色系统\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"排版系统\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"间距和尺寸系统\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"其他令牌\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"多模式\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>","processed":"Ensuite, vous pouvez organiser davantage vos variables en fonction des différents types de variables.\n\n<Cards>\n  <Cards.Card\n    icon={<Palette />}\n    title=\"Système de couleurs\"\n    href=\"/docs/organizing-your-variables/colors\"\n  />\n  <Cards.Card\n    icon={<Type />}\n    title=\"Système typographique\"\n    href=\"/docs/organizing-your-variables/typography\"\n  />\n  <Cards.Card\n    icon={<Ruler />}\n    title=\"Système d'espacement et de dimensions\"\n    href=\"/docs/organizing-your-variables/spacing\"\n  />\n  <Cards.Card\n    icon={<Box/>}\n    title=\"Autres jetons\"\n    href=\"/docs/organizing-your-variables/other-tokens\"\n  />\n  <Cards.Card\n    icon={<Columns3 />}\n    title=\"Multi-mode\"\n    href=\"/docs/organizing-your-variables/multi-mode\"\n  />\n</Cards>"}
{"targetLocale":"fr","key":"fm-attr-title","source":"CSS Variables","processed":"Variables CSS"}
